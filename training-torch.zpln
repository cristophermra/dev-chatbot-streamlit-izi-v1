{
  "paragraphs": [
    {
      "text": "%md\n# 1. Pre-procesamiento",
      "user": "anonymous",
      "dateUpdated": "2025-02-12T18:59:42+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h1>1. Pre-procesamiento</h1>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1739386782156_2101096149",
      "id": "paragraph_1739278223052_907732695",
      "dateCreated": "2025-02-12T18:59:42+0000",
      "status": "READY",
      "focus": true,
      "$$hashKey": "object:621"
    },
    {
      "title": "Carga de Datos",
      "text": "%spark.pyspark\n# Leer el archivo CSV en un DataFrame de Spark\ndf = spark.read \\\n    .format(\"csv\") \\\n    .option(\"header\", \"true\") \\\n    .option(\"sep\", \"|\") \\\n    .option(\"encoding\", \"ISO-8859-1\") \\\n    .option(\"inferSchema\", \"true\") \\\n    .load(\"/notebook/data/Det_declara_2022.csv\")\ndf.count()\n\n#CAMBIAR LA RUTA DE LECTURA POR PARQUECT\n\n#df = spark.read(\"hdfs:PATH_ARCHIVO_PARKET\")",
      "user": "anonymous",
      "dateUpdated": "2025-02-12T18:59:42+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "11395871"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1739386782160_234519992",
      "id": "paragraph_1738249438444_1351366128",
      "dateCreated": "2025-02-12T18:59:42+0000",
      "status": "READY",
      "$$hashKey": "object:622"
    },
    {
      "text": "%spark.pyspark\n#from pyspark.sql import SparkSession\nfrom pyspark.sql.functions import col, udf, split, array_intersect, lpad\nfrom pyspark.sql.types import StringType, ArrayType\nimport re\n#from unidecode import unidecode\nimport nltk\nfrom nltk.corpus import stopwords\nnltk.download('stopwords')",
      "user": "anonymous",
      "dateUpdated": "2025-02-12T18:59:42+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "[nltk_data] Downloading package stopwords to\n[nltk_data]     /opt/zeppelin/nltk_data...\n[nltk_data]   Package stopwords is already up-to-date!\nTrue"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1739386782160_286284537",
      "id": "paragraph_1739278367391_699873274",
      "dateCreated": "2025-02-12T18:59:42+0000",
      "status": "READY",
      "$$hashKey": "object:623"
    },
    {
      "text": "%spark.pyspark\nimport nltk\nfrom nltk.corpus import stopwords\nnltk.download('stopwords')\n\ndef preprocesar_texto(texto):\n    \"\"\"\n    Preprocesa el texto:\n    - Convierte a minúsculas\n    - Elimina acentos\n    - Elimina caracteres especiales\n    - Elimina stopwords en español\n    \"\"\"\n    if texto is None:\n        return \"\"\n    \n    texto = str(texto).lower()\n    #texto = unidecode(texto)\n    texto = re.sub(r'[^a-zA-Z\\s]', ' ', texto)\n    stop_words = set(stopwords.words('spanish'))\n    palabras = texto.split()\n    palabras = [palabra for palabra in palabras if palabra not in stop_words and len(palabra) > 2]\n    return palabras\n    #return ' '.join(palabras)  # Retorna una lista de palabras clave\n\n# Registrar UDF en Spark\npreprocesar_udf = udf(preprocesar_texto, ArrayType(StringType()))",
      "user": "anonymous",
      "dateUpdated": "2025-02-12T18:59:42+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "[nltk_data] Downloading package stopwords to\n[nltk_data]     /opt/zeppelin/nltk_data...\n[nltk_data]   Package stopwords is already up-to-date!\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1739386782161_1208327788",
      "id": "paragraph_1739278368190_546306692",
      "dateCreated": "2025-02-12T18:59:42+0000",
      "status": "READY",
      "$$hashKey": "object:624"
    },
    {
      "text": "%spark.pyspark\ntext_result = preprocesar_texto(\"PESTACION DE SOLDADURA,S/M,T12-XS,\")\n#set(text_result.split())\ntext_result",
      "user": "anonymous",
      "dateUpdated": "2025-02-12T18:59:42+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "['pestacion', 'soldadura']"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1739386782161_250179491",
      "id": "paragraph_1739302476664_67713122",
      "dateCreated": "2025-02-12T18:59:42+0000",
      "status": "READY",
      "$$hashKey": "object:625"
    },
    {
      "text": "%spark.pyspark\ndef filtrar_por_keywords_optimizado(df1, df2):\n    \"\"\"\n    Filtra DataFrames por coincidencia de palabras clave usando PySpark.\n    \"\"\"\n    # Merge de los DataFrames en base a NUM_PARTNANDI\n    df_merged = df1.join(df2, df1.NUM_PART_NANDI == df2.NUM_PARTNANDI, \"inner\")\n    \n    # Aplicar preprocesamiento a las columnas de descripción\n    df_merged = df_merged.withColumn(\"keywords_1\", preprocesar_udf(col(\"DES_NOM_COMERC\")))\n    df_merged = df_merged.withColumn(\"keywords_2\", preprocesar_udf(col(\"DES_COMER\")))\n    \n    # Filtrar por intersección de palabras clave\n    df_merged = df_merged.withColumn(\"tiene_keyword_comun\", array_intersect(col(\"keywords_1\"), col(\"keywords_2\")))\n    df_merged = df_merged.filter(col(\"tiene_keyword_comun\").isNotNull())\n    \n    # Seleccionar columnas finales\n    resultado = df_merged.drop(\"keywords_1\", \"keywords_2\", \"tiene_keyword_comun\")\n    \n    return resultado",
      "user": "anonymous",
      "dateUpdated": "2025-02-12T18:59:42+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1739386782161_129368441",
      "id": "paragraph_1739278544235_473697478",
      "dateCreated": "2025-02-12T18:59:42+0000",
      "status": "READY",
      "$$hashKey": "object:626"
    },
    {
      "text": "%spark.pyspark\ndf.show(5)",
      "user": "anonymous",
      "dateUpdated": "2025-02-12T18:59:42+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+-------------+--------------------+--------------------+--------------------+--------------------+--------------------+--------------+------------+-------------+-------+---------+----------+\n|NUM_PARTNANDI|           DES_COMER|     DES_FORMAPRESEN|        DES_MATECOMP|        DES_USOAPLIC|      DES_OTROSCARAC|COD_PAISORIGEN|COD_UNICOMER|COD_UNIFISICA|IND_DEL|COD_CANAL|COD_ESTDUA|\n+-------------+--------------------+--------------------+--------------------+--------------------+--------------------+--------------+------------+-------------+-------+---------+----------+\n|   8537109000|MEMBRANA TACTIL S...|              UNIDAD|     MEMBRANA TACTIL|            REPUESTO|                null|            CN|           U|            U|      0|         |         1|\n|   8471300000|COMPUTADORA, APPL...|PORTATIL/NOTEBOOK...|   Vel.Proc.:2.6 ghz|Cap.RAM:16 GB, Ca...|                null|            US|           U|            U|      0|         |         1|\n|   9503001000|CARRITO A BATERIA...|CODIGO:DK-F777,CO...|DIMENSIONES:126.5...|ACCESORIOS:SIN AC...|FUENTE MOVIMIENTO...|            CN|           U|            U|      0|        V|         1|\n|   8537109000|MEMBRANA TACTIL S...|              UNIDAD|     MEMBRANA TACTIL|            REPUESTO|                null|            CN|           U|            U|      0|         |         1|\n|   8712000000|BICICLETA,YHAMSIT...|CHILDREN BICYCLE ...|PARA NIÃOS/NIÃA...|INCLUYE CANASTILL...|16101 GIRL, 16100...|            CN|           U|            U|      1|        V|         1|\n+-------------+--------------------+--------------------+--------------------+--------------------+--------------------+--------------+------------+-------------+-------+---------+----------+\nonly showing top 5 rows\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1739386782162_391518257",
      "id": "paragraph_1739278986108_1689344434",
      "dateCreated": "2025-02-12T18:59:42+0000",
      "status": "READY",
      "$$hashKey": "object:627"
    },
    {
      "title": "Tratamiento de datos",
      "text": "%spark.pyspark\ndf_dams = df.withColumn(\"NUM_PARTNANDI\", lpad(col(\"NUM_PARTNANDI\"), 10, \"0\"))\ndf_dams.count()",
      "user": "anonymous",
      "dateUpdated": "2025-02-12T18:59:42+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "11395871"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1739386782162_809805284",
      "id": "paragraph_1739278639910_1466858964",
      "dateCreated": "2025-02-12T18:59:42+0000",
      "status": "READY",
      "$$hashKey": "object:628"
    },
    {
      "text": "%spark.pyspark\ndf_dams_verde = df_dams.filter(df_dams['COD_CANAL'] == 'V')\ndf_dams_verde.count()",
      "user": "anonymous",
      "dateUpdated": "2025-02-12T18:59:42+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "9506837"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1739386782162_543597524",
      "id": "paragraph_1739278640081_941295664",
      "dateCreated": "2025-02-12T18:59:42+0000",
      "status": "READY",
      "$$hashKey": "object:629"
    },
    {
      "text": "%spark.pyspark\ndf_dams_doc = df_dams.filter(df_dams['COD_CANAL'] == 'D')\ndf_dams_doc.count()",
      "user": "anonymous",
      "dateUpdated": "2025-02-12T18:59:42+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "1036479"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1739386782164_1815665514",
      "id": "paragraph_1739278640289_1167362027",
      "dateCreated": "2025-02-12T18:59:42+0000",
      "status": "READY",
      "$$hashKey": "object:630"
    },
    {
      "text": "%spark.pyspark\ndf_dams_fisi = df_dams.filter(df_dams['COD_CANAL'] == 'F')\ndf_dams_fisi.count()",
      "user": "anonymous",
      "dateUpdated": "2025-02-12T18:59:42+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "851540"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1739386782164_1168697691",
      "id": "paragraph_1739279289109_577162920",
      "dateCreated": "2025-02-12T18:59:42+0000",
      "status": "READY",
      "$$hashKey": "object:631"
    },
    {
      "title": "Carga de Indice de clasificacion",
      "text": "%spark.pyspark\n\ndf_class_index = spark.read.option(\"header\", \"true\") \\\n    .option(\"inferSchema\", \"true\") \\\n    .csv(\"/notebook/data/INDICE_CLASIFICACION.csv\")\ndf_class_index.count()\n",
      "user": "anonymous",
      "dateUpdated": "2025-02-12T18:59:42+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "fontSize": 9,
        "title": true,
        "results": {},
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "4627"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1739386782164_1120706514",
      "id": "paragraph_1739279289572_2101299533",
      "dateCreated": "2025-02-12T18:59:42+0000",
      "status": "READY",
      "$$hashKey": "object:632"
    },
    {
      "text": "%spark.pyspark\ndf_class_index.printSchema()",
      "user": "anonymous",
      "dateUpdated": "2025-02-12T18:59:42+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "root\n |-- COD_FUENTE_INF: string (nullable = true)\n |-- NUM_PART_NANDI: string (nullable = true)\n |-- NUM_SEQ: string (nullable = true)\n |-- DES_NOM_COMERC: string (nullable = true)\n |-- DES_ARANCEL_BASE: string (nullable = true)\n |-- IND_VIGENCIA: string (nullable = true)\n |-- IND_ACTUALIZA: string (nullable = true)\n |-- FEC_REGIS: string (nullable = true)\n |-- COD_USUREG: string (nullable = true)\n |-- FEC_MODIF: string (nullable = true)\n |-- COD_USUMODIF: string (nullable = true)\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1739386782164_1126038999",
      "id": "paragraph_1739281083233_526244809",
      "dateCreated": "2025-02-12T18:59:42+0000",
      "status": "READY",
      "$$hashKey": "object:633"
    },
    {
      "text": "%spark.pyspark\nfrom pyspark.sql import functions as F\nfrom pyspark.sql.types import *\nfrom pyspark.sql.window import Window",
      "user": "anonymous",
      "dateUpdated": "2025-02-12T18:59:42+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1739386782165_1767689907",
      "id": "paragraph_1739281033325_1781699008",
      "dateCreated": "2025-02-12T18:59:42+0000",
      "status": "READY",
      "$$hashKey": "object:634"
    },
    {
      "text": "%spark.pyspark\ndf_class_index.show(10)",
      "user": "anonymous",
      "dateUpdated": "2025-02-12T18:59:42+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+--------------+--------------+-------+--------------------+----------------+------------+-------------+-------------------+----------+-------------------+------------+\n|COD_FUENTE_INF|NUM_PART_NANDI|NUM_SEQ|      DES_NOM_COMERC|DES_ARANCEL_BASE|IND_VIGENCIA|IND_ACTUALIZA|          FEC_REGIS|COD_USUREG|          FEC_MODIF|COD_USUMODIF|\n+--------------+--------------+-------+--------------------+----------------+------------+-------------+-------------------+----------+-------------------+------------+\n|             1|        392620|      1|PRENDAS DE VESTIR...|  DS 404-2021-EF|           S|            D|2008-04-08 14:02:46|      4490|2022-08-19 11:25:01|        7224|\n|             1|          4015|      1|PRENDAS DE VESTIR...|  DS 404-2021-EF|           S|            D|2008-04-08 14:09:58|      4490|2022-08-19 11:40:18|        7224|\n|             1|          8509|      1|APARATOS ELECTROM...|  DS 404-2021-EF|           S|            D|2008-04-08 14:15:35|      4490|2022-08-18 21:47:04|        2473|\n|             1|          8516|      1|APARATOS ELECTROT...|  DS 017-2007-EF|           S|            A|2008-04-08 14:16:49|      4490|2022-08-18 00:26:34|        2473|\n|             1|          7321|      1|APARATOS NO ELÉCT...|  DS 017-2007-EF|           S|            A|2008-04-08 14:18:13|      4490|2022-08-22 15:42:09|        5752|\n|             1|          4203|      1|          DELANTALES|  DS 404-2021-EF|           S|            D|2008-04-08 14:21:38|      4490|2022-08-17 17:20:52|        5765|\n|             1|           306|      1|INVERTEBRADOS ACU...|  DS 017-2007-EF|           S|            A|2008-04-08 14:23:29|      4490|2022-07-11 10:41:13|        6425|\n|             1|           307|      1|MOLUSCOS, INCLUSO...|  DS 404-2021-EF|           S|            D|2008-04-08 14:24:29|      4490|2022-07-11 10:53:15|        6425|\n|             1|          1603|      1|EXTRACTOS Y JUGOS...|  DS 404-2021-EF|           S|            D|2008-04-08 14:25:42|      4490|2022-08-30 10:28:03|        4640|\n|             1|        160510|      1|CANGREJOS (EXCEPT...|  DS 017-2007-EF|           S|            A|2008-04-08 14:29:00|      4490|2022-08-30 11:03:17|        4640|\n+--------------+--------------+-------+--------------------+----------------+------------+-------------+-------------------+----------+-------------------+------------+\nonly showing top 10 rows\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1739386782165_110105241",
      "id": "paragraph_1739303487269_395466827",
      "dateCreated": "2025-02-12T18:59:42+0000",
      "status": "READY",
      "$$hashKey": "object:635"
    },
    {
      "title": "PRUEBAAS DE INDICE DE CLASIFIACION",
      "text": "%spark.pyspark\n#df_pruebas = df_class_index.filter((col(\"index\") >= 10) & (col(\"index\") <= 20))\ndf_pruebas = df_class_index\n\nfrom pyspark.sql import Window\nfrom pyspark.sql.functions import row_number\n\n# Crear una columna con números de fila\nwindow_spec = Window.orderBy(\"NUM_PART_NANDI\")  # Reemplaza \"COLUMNA_DE_ORDEN\" con una columna válida\ndf_with_row_num = df_pruebas.withColumn(\"row_num\", row_number().over(window_spec))\n",
      "user": "anonymous",
      "dateUpdated": "2025-02-12T18:59:42+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1739386782165_177217174",
      "id": "paragraph_1739304047610_679532830",
      "dateCreated": "2025-02-12T18:59:42+0000",
      "status": "READY",
      "$$hashKey": "object:636"
    },
    {
      "text": "%spark.pyspark\ndf_with_row_num.count()",
      "user": "anonymous",
      "dateUpdated": "2025-02-12T18:59:42+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "4627"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1739386782165_960056282",
      "id": "paragraph_1739306141786_290165504",
      "dateCreated": "2025-02-12T18:59:42+0000",
      "status": "READY",
      "$$hashKey": "object:637"
    },
    {
      "text": "%spark.pyspark\n# Filtrar para obtener las filas 10 a 20\ndf_slice = df_with_row_num.filter((col(\"row_num\") >= 10) & (col(\"row_num\") <= 4020)).drop(\"row_num\")\n\n# Mostrar el resultado\ndf_slice.show()",
      "user": "anonymous",
      "dateUpdated": "2025-02-12T18:59:42+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+--------------+--------------+-------+--------------------+----------------+------------+-------------+-------------------+----------+-------------------+------------+\n|COD_FUENTE_INF|NUM_PART_NANDI|NUM_SEQ|      DES_NOM_COMERC|DES_ARANCEL_BASE|IND_VIGENCIA|IND_ACTUALIZA|          FEC_REGIS|COD_USUREG|          FEC_MODIF|COD_USUMODIF|\n+--------------+--------------+-------+--------------------+----------------+------------+-------------+-------------------+----------+-------------------+------------+\n|             1|        100830|      1|             ALPISTE|  DS 017-2007-EF|           S|            A|2008-04-21 10:18:53|      4490|2022-08-19 16:20:10|        2849|\n|            99|    1008301000|      1|ALPISTE, PARA SIE...|  DS 404-2021-EF|           S|            D|2022-08-19 16:18:51|      2849|               null|        null|\n|            99|    1008309000|      1|  ALPISTE, LOS DEMÁS|  DS 404-2021-EF|           S|            D|2022-08-19 16:19:39|      2849|               null|        null|\n|             1|         10110|      1|         ASNOS VIVOS|  DS 017-2007-EF|           S|            A|2008-04-09 12:13:12|      4490|2021-10-21 12:54:07|        4490|\n|             1|         10190|      1|         ASNOS VIVOS|  DS 017-2007-EF|           S|            A|2008-04-09 12:13:39|      4490|2021-10-21 12:53:30|        4490|\n|             1|           102|      1|ANIMALES VIVOS DE...|  DS 404-2021-EF|           S|            D|2008-04-15 15:50:39|      4490|2022-07-11 09:18:54|        6425|\n|             1|           102|      2|        VACAS, VIVAS|  DS 404-2021-EF|           S|            D|2008-08-29 15:54:56|      4490|2022-07-11 09:19:31|        6425|\n|             1|           105|      1|        POLLOS VIVOS|  DS 017-2007-EF|           S|            D|2008-05-28 12:07:37|      4490|               null|        null|\n|             1|           105|      2|         PATOS VIVOS|  DS 404-2021-EF|           S|            D|2008-10-16 16:02:29|      4490|2022-07-11 09:20:21|        6425|\n|             1|         10631|      1|      AVES DE RAPIÑA|  DS 404-2021-EF|           S|            D|2008-04-14 11:05:46|      4490|2022-07-11 09:23:55|        6425|\n|             1|         10632|      1|AVES PSITACIFORME...|  DS 404-2021-EF|           S|            D|2008-04-14 11:07:11|      4490|2022-07-11 09:23:12|        6425|\n|             1|         10639|      1|AVES, EXCEPTO LAS...|  DS 404-2021-EF|           S|            D|2008-04-14 11:08:53|      4490|2022-07-11 09:22:23|        6425|\n|             1|          1101|      1|HARINA DE TRIGO O...|  DS 017-2007-EF|           S|            A|2009-01-15 14:58:44|      4490|2022-08-19 16:21:36|        2849|\n|             1|        110100|      1|HARINA DE TRIGO O...|  DS 404-2021-EF|           S|            D|2008-11-14 11:36:00|      4490|2022-08-19 16:21:24|        2849|\n|             1|      11010000|      1|     HARINA DE TRIGO|  DS 342-2016-EF|           N|            A|2022-07-26 15:43:34|      7224|2022-07-26 18:08:19|        7224|\n|             1|          1102|      1|  HARINA DE CEREALES|  DS 017-2007-EF|           S|            A|2008-05-19 14:28:17|      4490|2022-08-19 17:12:46|        2849|\n|             1|          1102|      2|HARINA DE CEREALE...|  DS 404-2021-EF|           S|            D|2008-11-14 11:37:09|      4490|2022-08-19 17:10:29|        2849|\n|             1|          1102|      3|HARINA DE CEREALE...|  DS 404-2021-EF|           S|            D|2009-01-15 15:26:40|      4490|2022-08-19 17:06:49|        2849|\n|             1|        110210|      1|   HARINA DE CENTENO|  DS 017-2007-EF|           S|            A|2008-11-14 11:37:45|      4490|2022-08-19 17:06:01|        2849|\n|             1|        110210|      2|   HARINA DE CENTENO|  DS 017-2007-EF|           S|            A|2009-01-15 14:59:29|      4490|2022-08-19 17:09:05|        2849|\n+--------------+--------------+-------+--------------------+----------------+------------+-------------+-------------------+----------+-------------------+------------+\nonly showing top 20 rows\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1739386782166_261730670",
      "id": "paragraph_1739306129911_940578078",
      "dateCreated": "2025-02-12T18:59:42+0000",
      "status": "READY",
      "$$hashKey": "object:638"
    },
    {
      "text": "%spark.pyspark\n",
      "user": "anonymous",
      "dateUpdated": "2025-02-12T18:59:42+0000",
      "progress": 0,
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1739386782166_1431473257",
      "id": "paragraph_1739305866791_955936217",
      "dateCreated": "2025-02-12T18:59:42+0000",
      "status": "READY",
      "$$hashKey": "object:639"
    },
    {
      "text": "%spark.pyspark\ndf_slice = df_slice.withColumn(\"PARTNANDI_LEN\", \n    length(trim(col(\"NUM_PART_NANDI\")))\n)\ndf_slice.show()",
      "user": "anonymous",
      "dateUpdated": "2025-02-12T18:59:42+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+--------------+--------------+-------+--------------------+----------------+------------+-------------+-------------------+----------+-------------------+------------+-------------+\n|COD_FUENTE_INF|NUM_PART_NANDI|NUM_SEQ|      DES_NOM_COMERC|DES_ARANCEL_BASE|IND_VIGENCIA|IND_ACTUALIZA|          FEC_REGIS|COD_USUREG|          FEC_MODIF|COD_USUMODIF|PARTNANDI_LEN|\n+--------------+--------------+-------+--------------------+----------------+------------+-------------+-------------------+----------+-------------------+------------+-------------+\n|             1|        100830|      1|             ALPISTE|  DS 017-2007-EF|           S|            A|2008-04-21 10:18:53|      4490|2022-08-19 16:20:10|        2849|            6|\n|            99|    1008301000|      1|ALPISTE, PARA SIE...|  DS 404-2021-EF|           S|            D|2022-08-19 16:18:51|      2849|               null|        null|           10|\n|            99|    1008309000|      1|  ALPISTE, LOS DEMÁS|  DS 404-2021-EF|           S|            D|2022-08-19 16:19:39|      2849|               null|        null|           10|\n|             1|         10110|      1|         ASNOS VIVOS|  DS 017-2007-EF|           S|            A|2008-04-09 12:13:12|      4490|2021-10-21 12:54:07|        4490|            5|\n|             1|         10190|      1|         ASNOS VIVOS|  DS 017-2007-EF|           S|            A|2008-04-09 12:13:39|      4490|2021-10-21 12:53:30|        4490|            5|\n|             1|           102|      1|ANIMALES VIVOS DE...|  DS 404-2021-EF|           S|            D|2008-04-15 15:50:39|      4490|2022-07-11 09:18:54|        6425|            3|\n|             1|           102|      2|        VACAS, VIVAS|  DS 404-2021-EF|           S|            D|2008-08-29 15:54:56|      4490|2022-07-11 09:19:31|        6425|            3|\n|             1|           105|      1|        POLLOS VIVOS|  DS 017-2007-EF|           S|            D|2008-05-28 12:07:37|      4490|               null|        null|            3|\n|             1|           105|      2|         PATOS VIVOS|  DS 404-2021-EF|           S|            D|2008-10-16 16:02:29|      4490|2022-07-11 09:20:21|        6425|            3|\n|             1|         10631|      1|      AVES DE RAPIÑA|  DS 404-2021-EF|           S|            D|2008-04-14 11:05:46|      4490|2022-07-11 09:23:55|        6425|            5|\n|             1|         10632|      1|AVES PSITACIFORME...|  DS 404-2021-EF|           S|            D|2008-04-14 11:07:11|      4490|2022-07-11 09:23:12|        6425|            5|\n|             1|         10639|      1|AVES, EXCEPTO LAS...|  DS 404-2021-EF|           S|            D|2008-04-14 11:08:53|      4490|2022-07-11 09:22:23|        6425|            5|\n|             1|          1101|      1|HARINA DE TRIGO O...|  DS 017-2007-EF|           S|            A|2009-01-15 14:58:44|      4490|2022-08-19 16:21:36|        2849|            4|\n|             1|        110100|      1|HARINA DE TRIGO O...|  DS 404-2021-EF|           S|            D|2008-11-14 11:36:00|      4490|2022-08-19 16:21:24|        2849|            6|\n|             1|      11010000|      1|     HARINA DE TRIGO|  DS 342-2016-EF|           N|            A|2022-07-26 15:43:34|      7224|2022-07-26 18:08:19|        7224|            8|\n|             1|          1102|      1|  HARINA DE CEREALES|  DS 017-2007-EF|           S|            A|2008-05-19 14:28:17|      4490|2022-08-19 17:12:46|        2849|            4|\n|             1|          1102|      2|HARINA DE CEREALE...|  DS 404-2021-EF|           S|            D|2008-11-14 11:37:09|      4490|2022-08-19 17:10:29|        2849|            4|\n|             1|          1102|      3|HARINA DE CEREALE...|  DS 404-2021-EF|           S|            D|2009-01-15 15:26:40|      4490|2022-08-19 17:06:49|        2849|            4|\n|             1|        110210|      1|   HARINA DE CENTENO|  DS 017-2007-EF|           S|            A|2008-11-14 11:37:45|      4490|2022-08-19 17:06:01|        2849|            6|\n|             1|        110210|      2|   HARINA DE CENTENO|  DS 017-2007-EF|           S|            A|2009-01-15 14:59:29|      4490|2022-08-19 17:09:05|        2849|            6|\n+--------------+--------------+-------+--------------------+----------------+------------+-------------+-------------------+----------+-------------------+------------+-------------+\nonly showing top 20 rows\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1739386782175_1583888526",
      "id": "paragraph_1739304584679_2123790820",
      "dateCreated": "2025-02-12T18:59:42+0000",
      "status": "READY",
      "$$hashKey": "object:640"
    },
    {
      "text": "%spark.pyspark\nfrom pyspark.sql.functions import col, length, trim, row_number\nfrom pyspark.sql.window import Window\n\n# Convert and filter using correct column name \"NUM_PART_NANDI\"\ndf_slice = df_slice.filter(\n    (col(\"PARTNANDI_LEN\") == 10) & \n    (col(\"IND_VIGENCIA\") == \"S\")  # Asumiendo que IND_DEL es equivalente a IND_VIGENCIA\n)\ndf_slice.show()",
      "user": "anonymous",
      "dateUpdated": "2025-02-12T18:59:42+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+--------------+--------------+-------+--------------------+----------------+------------+-------------+-------------------+----------+---------+------------+-------------+\n|COD_FUENTE_INF|NUM_PART_NANDI|NUM_SEQ|      DES_NOM_COMERC|DES_ARANCEL_BASE|IND_VIGENCIA|IND_ACTUALIZA|          FEC_REGIS|COD_USUREG|FEC_MODIF|COD_USUMODIF|PARTNANDI_LEN|\n+--------------+--------------+-------+--------------------+----------------+------------+-------------+-------------------+----------+---------+------------+-------------+\n|            99|    1008301000|      1|ALPISTE, PARA SIE...|  DS 404-2021-EF|           S|            D|2022-08-19 16:18:51|      2849|     null|        null|           10|\n|            99|    1008309000|      1|  ALPISTE, LOS DEMÁS|  DS 404-2021-EF|           S|            D|2022-08-19 16:19:39|      2849|     null|        null|           10|\n|            99|    1102901000|      1|   HARINA DE CENTENO|  DS 404-2021-EF|           S|            D|2022-08-19 17:05:41|      2849|     null|        null|           10|\n|            99|    1104190000|      1|GRANOS DE CEBADA,...|  DS 404-2021-EF|           S|            D|2022-08-19 17:29:49|      2849|     null|        null|           10|\n|            99|    1204001000|      1|SEMILLA DE LINO, ...|  DS 404-2021-EF|           S|            D|2022-08-19 17:37:08|      2849|     null|        null|           10|\n|            99|    1204009000|      1|SEMILLAS DE LINO,...|  DS 404-2021-EF|           S|            D|2022-08-19 17:39:24|      2849|     null|        null|           10|\n|            99|    1207210000|      1|SEMILLAS DE ALGOD...|  DS 404-2021-EF|           S|            D|2022-08-19 17:44:37|      2849|     null|        null|           10|\n|            99|    1207290000|      1|LAS DEMÁS SEMILLA...|  DS 404-2021-EF|           S|            D|2022-08-19 17:45:30|      2849|     null|        null|           10|\n|            99|    1207301000|      1|SEMILLAS DE RICIN...|  DS 404-2021-EF|           S|            D|2022-08-19 17:42:24|      2849|     null|        null|           10|\n|            99|    1207309000|      1|SEMILLAS DE RICIN...|  DS 404-2021-EF|           S|            D|2022-08-19 17:43:25|      2849|     null|        null|           10|\n|            99|    1212210000|      1|ALGAS, APTAS PARA...|  DS 404-2021-EF|           S|            D|2022-08-19 17:58:18|      2849|     null|        null|           10|\n|            99|    1212290000|      1|ALGAS, LAS DEMÁS ...|  DS 404-2021-EF|           S|            D|2022-08-19 17:59:06|      2849|     null|        null|           10|\n|            99|    1212940000|      1| RAICES DE ACHICORIA|  DS 404-2021-EF|           S|            D|2022-08-19 17:57:24|      2849|     null|        null|           10|\n|            99|    1502101010|      1|SEBO DESNATURALIZ...|  DS 404-2021-EF|           S|            D|2022-08-29 18:50:16|      4640|     null|        null|           10|\n|            99|    1503000000|      1|ACEITE DE MANTECA...|  DS 404-2021-EF|           S|            D|2022-08-29 18:53:26|      4640|     null|        null|           10|\n|            99|    1505009100|      1|            LANOLINA|  DS 404-2021-EF|           S|            D|2022-08-29 19:00:16|      4640|     null|        null|           10|\n|            99|    1506001000|      1|ACEITE DE PIE DE ...|  DS 404-2021-EF|           S|            D|2022-08-29 19:02:02|      4640|     null|        null|           10|\n|            99|    1513190000|      1|ACEITE REFINADO D...|  DS 404-2021-EF|           S|            D|2022-08-29 19:12:50|      4640|     null|        null|           10|\n|            99|    1514190000|      1|ACEITE REFINADO D...|  DS 404-2021-EF|           S|            D|2022-08-29 21:08:04|      4640|     null|        null|           10|\n|            99|    1516100000|      1|GRASAS Y ACEITES ...|  DS 404-2021-EF|           S|            D|2022-08-29 21:13:55|      4640|     null|        null|           10|\n+--------------+--------------+-------+--------------------+----------------+------------+-------------+-------------------+----------+---------+------------+-------------+\nonly showing top 20 rows\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1739386782175_32176976",
      "id": "paragraph_1739303646456_46220327",
      "dateCreated": "2025-02-12T18:59:42+0000",
      "status": "READY",
      "$$hashKey": "object:641"
    },
    {
      "text": "%spark.pyspark\n# Group by using correct column name\nwindow_spec = Window.partitionBy(\"NUM_PART_NANDI\").orderBy(\"NUM_PART_NANDI\")\n\ndf_final = df_slice \\\n    .withColumn(\"row_number\", row_number().over(window_spec))\n    \ndf_final.filter(col(\"row_number\") > 1).show()",
      "user": "anonymous",
      "dateUpdated": "2025-02-12T18:59:42+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+--------------+--------------+-------+--------------------+----------------+------------+-------------+-------------------+----------+---------+------------+-------------+----------+\n|COD_FUENTE_INF|NUM_PART_NANDI|NUM_SEQ|      DES_NOM_COMERC|DES_ARANCEL_BASE|IND_VIGENCIA|IND_ACTUALIZA|          FEC_REGIS|COD_USUREG|FEC_MODIF|COD_USUMODIF|PARTNANDI_LEN|row_number|\n+--------------+--------------+-------+--------------------+----------------+------------+-------------+-------------------+----------+---------+------------+-------------+----------+\n|            99|    1601000090|      2|PREPARACIONES O C...|  DS 404-2021-EF|           S|            D|2022-08-30 10:21:18|      4640|     null|        null|           10|         2|\n|            99|    1605210000|      2|LANGOSTINOS, PREP...|  DS 404-2021-EF|           S|            D|2022-08-30 10:53:38|      4640|     null|        null|           10|         2|\n|            99|    1605210000|      3|CAMARONES, PREPAR...|  DS 404-2021-EF|           S|            D|2022-08-30 10:55:18|      4640|     null|        null|           10|         3|\n|            99|    1704909000|      2|    CHOCOLATE BLANCO|  DS 404-2021-EF|           S|            D|2022-08-30 11:26:56|      4640|     null|        null|           10|         2|\n|            99|    1806900000|      2|PREPARACIONES ALI...|  DS 404-2021-EF|           S|            D|2022-08-30 11:39:46|      4640|     null|        null|           10|         2|\n|            99|    1901909000|      2|PREPARACIÓN ALIME...|  DS 404-2021-EF|           S|            D|2022-08-30 12:20:58|      4640|     null|        null|           10|         2|\n|            99|    2104101000|      2|PREPARACIONES PAR...|  DS 404-2021-EF|           S|            D|2022-07-26 15:46:05|      9229|     null|        null|           10|         2|\n|            99|    2106101900|      3|CONCENTRADO DE PR...|  DS 404-2021-EF|           S|            D|2022-07-26 12:13:44|      9229|     null|        null|           10|         2|\n|            99|    2106902100|      2|JARABE DE LYCHEE ...|  DS 404-2021-EF|           S|            D|2022-07-26 10:03:46|      9229|     null|        null|           10|         2|\n|            99|    2106902100|      3|JARABE DE MANZANA...|  DS 404-2021-EF|           S|            D|2022-07-26 11:35:08|      9229|     null|        null|           10|         3|\n|            99|    2106902100|      4|JARABE DE DURAZNO...|  DS 404-2021-EF|           S|            D|2022-07-26 11:37:31|      9229|     null|        null|           10|         4|\n|            99|    2106902100|      5|JARABE DE LIMÓN (...|  DS 404-2021-EF|           S|            D|2022-07-26 11:39:46|      9229|     null|        null|           10|         5|\n|            99|    2106902100|      6|JARABE DE FRESA (...|  DS 404-2021-EF|           S|            D|2022-07-26 11:42:01|      9229|     null|        null|           10|         6|\n|            99|    2106902100|      7|JARABE DE PIÑA (P...|  DS 404-2021-EF|           S|            D|2022-07-26 11:42:52|      9229|     null|        null|           10|         7|\n|            99|    2106902100|      8|JARABE DE ARÁNDAN...|  DS 404-2021-EF|           S|            D|2022-07-26 11:43:54|      9229|     null|        null|           10|         8|\n|            99|    2106902100|      9|JARABE DE MANGO (...|  DS 404-2021-EF|           S|            D|2022-07-26 11:48:17|      9229|     null|        null|           10|         9|\n|            99|    2106902100|     10|INFUSION CON SABO...|  DS 404-2021-EF|           S|            D|2022-07-26 16:39:33|      9229|     null|        null|           10|        10|\n|            99|    2106903000|      2|PROTEÍNA HIDROLIZ...|  DS 404-2021-EF|           S|            D|2022-07-26 12:04:46|      9229|     null|        null|           10|         2|\n|            99|    2106907300|      2|  TABLETAS DE CALCIO|  DS 404-2021-EF|           S|            D|2022-07-26 16:10:13|      9229|     null|        null|           10|         2|\n|            99|    2106909000|      2|MEZCLA EN POLVO P...|  DS 404-2001-EF|           S|            D|2022-07-26 11:53:51|      9229|     null|        null|           10|         2|\n+--------------+--------------+-------+--------------------+----------------+------------+-------------+-------------------+----------+---------+------------+-------------+----------+\nonly showing top 20 rows\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1739386782176_1548356711",
      "id": "paragraph_1739306365858_827014585",
      "dateCreated": "2025-02-12T18:59:42+0000",
      "status": "READY",
      "$$hashKey": "object:642"
    },
    {
      "text": "%spark.pyspark\n    .filter(col(\"row_number\") == 1) \\\n    .drop(\"row_number\", \"PARTNANDI_LEN\")\n\n# Show results\nprint(\"\\nPrimeras 5 filas del resultado:\")\ndf_final.show(5)\n\n# Count records\nprint(\"\\nTotal de registros:\", df_final.count())",
      "user": "anonymous",
      "dateUpdated": "2025-02-12T18:59:42+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1739386782177_457978023",
      "id": "paragraph_1739306709616_1281819807",
      "dateCreated": "2025-02-12T18:59:42+0000",
      "status": "READY",
      "$$hashKey": "object:643"
    },
    {
      "text": "%spark.pyspark\n    .filter(col(\"row_number\") == 1) \\\n    .drop(\"row_number\", \"PARTNANDI_LEN\")\n\n# Show results\nprint(\"\\nPrimeras 5 filas del resultado:\")\ndf_final.show(5)\n\n# Count records\nprint(\"\\nTotal de registros:\", df_final.count())",
      "user": "anonymous",
      "dateUpdated": "2025-02-12T18:59:42+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1739386782177_82132069",
      "id": "paragraph_1739306366083_838172539",
      "dateCreated": "2025-02-12T18:59:42+0000",
      "status": "READY",
      "$$hashKey": "object:644"
    },
    {
      "title": "Implementación de Embeddings sin NNs",
      "text": "%spark.pyspark\n",
      "user": "anonymous",
      "dateUpdated": "2025-02-14T16:00:09+0000",
      "progress": 0,
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/python",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1739386782177_1910997900",
      "id": "paragraph_1739306366486_728768825",
      "dateCreated": "2025-02-12T18:59:42+0000",
      "dateStarted": "2025-02-14T15:59:50+0000",
      "dateFinished": "2025-02-14T15:59:51+0000",
      "status": "FINISHED",
      "$$hashKey": "object:645"
    },
    {
      "text": "%spark.pyspark\n",
      "user": "anonymous",
      "dateUpdated": "2025-02-12T18:59:42+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1739386782177_1577184782",
      "id": "paragraph_1739304121010_817829036",
      "dateCreated": "2025-02-12T18:59:42+0000",
      "status": "READY",
      "$$hashKey": "object:646"
    },
    {
      "text": "%spark.pyspark\n",
      "user": "anonymous",
      "dateUpdated": "2025-02-12T18:59:42+0000",
      "progress": 0,
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1739386782177_1118559138",
      "id": "paragraph_1739310823855_1777846777",
      "dateCreated": "2025-02-12T18:59:42+0000",
      "status": "READY",
      "$$hashKey": "object:647"
    },
    {
      "text": "%md\n## FIN PRUEBAS",
      "user": "anonymous",
      "dateUpdated": "2025-02-12T18:59:42+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h2>FIN PRUEBAS</h2>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1739386782177_954655872",
      "id": "paragraph_1739304122342_743002474",
      "dateCreated": "2025-02-12T18:59:42+0000",
      "status": "READY",
      "$$hashKey": "object:648"
    },
    {
      "text": "%spark.pyspark\nfrom pyspark.sql.functions import col, length, trim, row_number\nfrom pyspark.sql.window import Window\n\n# Convert and filter using correct column name \"NUM_PARTNANDI\"\ndf_filtered = df_class_index.withColumn(\"PARTNANDI_LEN\", \n    length(trim(col(\"NUM_PART_NANDI\")))\n).filter(\n    (col(\"PARTNANDI_LEN\") == 10) & \n    (col(\"IND_VIGENCIA\") == \"S\")  # Asumiendo que IND_DEL es equivalente a IND_VIGENCIA\n)\n\n# Group by using correct column name\nwindow_spec = Window.partitionBy(\"NUM_PART_NANDI\").orderBy(\"NUM_PART_NANDI\")\n\ndf_final = df_filtered \\\n    .withColumn(\"row_number\", row_number().over(window_spec)) \\\n    .filter(col(\"row_number\") == 1) \\\n    .drop(\"row_number\", \"PARTNANDI_LEN\")\n\n# Show results\nprint(\"\\nPrimeras 5 filas del resultado:\")\ndf_final.show(5)\n\n# Count records\nprint(\"\\nTotal de registros:\", df_final.count())",
      "user": "anonymous",
      "dateUpdated": "2025-02-12T18:59:42+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\nPrimeras 5 filas del resultado:\n+--------------+--------------+-------+--------------------+----------------+------------+-------------+-------------------+----------+---------+------------+\n|COD_FUENTE_INF|NUM_PART_NANDI|NUM_SEQ|      DES_NOM_COMERC|DES_ARANCEL_BASE|IND_VIGENCIA|IND_ACTUALIZA|          FEC_REGIS|COD_USUREG|FEC_MODIF|COD_USUMODIF|\n+--------------+--------------+-------+--------------------+----------------+------------+-------------+-------------------+----------+---------+------------+\n|            99|    1003100000|      1|CEBADA, PARA SIEMBRA|  DS 404-2021-EF|           S|            D|2022-08-19 16:10:33|      2849|     null|        null|\n|            99|    1003900000|      1|   CEBADA, LAS DEMÁS|  DS 404-2021-EF|           S|            D|2022-08-19 16:11:32|      2849|     null|        null|\n|            99|    1008101000|      1|ALFORFÓN, PARA SI...|  DS 404-2021-EF|           S|            D|2022-08-19 16:16:44|      2849|     null|        null|\n|            99|    1008109000|      1| ALFORFÓN, LOS DEMÁS|  DS 404-2021-EF|           S|            D|2022-08-19 16:18:18|      2849|     null|        null|\n|            99|    1008301000|      1|ALPISTE, PARA SIE...|  DS 404-2021-EF|           S|            D|2022-08-19 16:18:51|      2849|     null|        null|\n+--------------+--------------+-------+--------------------+----------------+------------+-------------+-------------------+----------+---------+------------+\nonly showing top 5 rows\n\n\nTotal de registros: 870\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1739386782178_1470750025",
      "id": "paragraph_1739279289947_953554601",
      "dateCreated": "2025-02-12T18:59:42+0000",
      "status": "READY",
      "$$hashKey": "object:649"
    },
    {
      "text": "%spark.pyspark\nimport nltk\nfrom nltk.corpus import stopwords\nnltk.download('stopwords')\n\ndf_dams_doc_filt = filtrar_por_keywords_optimizado(df_final, df_dams_doc)\n# Mostrar algunos resultados para verificar\nprint(\"\\nPrimeras 5 filas del resultado:\")\ndf_dams_doc_filt.show(5)\n\n# Contar registros para verificar\nprint(\"\\nTotal de registros:\", df_dams_doc_filt.count())",
      "user": "anonymous",
      "dateUpdated": "2025-02-12T18:59:42+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "[nltk_data] Downloading package stopwords to\n[nltk_data]     /opt/zeppelin/nltk_data...\n[nltk_data]   Package stopwords is already up-to-date!\n\nPrimeras 5 filas del resultado:\n+--------------+--------------+-------+--------------------+----------------+------------+-------------+-------------------+----------+---------+------------+-------------+--------------------+--------------------+--------------------+--------------------+--------------+--------------+------------+-------------+-------+---------+----------+\n|COD_FUENTE_INF|NUM_PART_NANDI|NUM_SEQ|      DES_NOM_COMERC|DES_ARANCEL_BASE|IND_VIGENCIA|IND_ACTUALIZA|          FEC_REGIS|COD_USUREG|FEC_MODIF|COD_USUMODIF|NUM_PARTNANDI|           DES_COMER|     DES_FORMAPRESEN|        DES_MATECOMP|        DES_USOAPLIC|DES_OTROSCARAC|COD_PAISORIGEN|COD_UNICOMER|COD_UNIFISICA|IND_DEL|COD_CANAL|COD_ESTDUA|\n+--------------+--------------+-------+--------------------+----------------+------------+-------------+-------------------+----------+---------+------------+-------------+--------------------+--------------------+--------------------+--------------------+--------------+--------------+------------+-------------+-------+---------+----------+\n|            99|    2304000000|      1|       TORTA DE SOJA|  DS 404-2021-EF|           S|            D|2022-08-30 16:03:20|      4640|     null|        null|   2304000000|TORTA DE SOYA , M...|HUMEDAD:11.93%,PR...|PARA ELABORACION ...|EN SACOS DE POLIP...|          null|            BO|          TM|           KG|      0|        D|         3|\n|            99|    8525830000|      1|CÁMARAS DE VISION...|  DS 404-2021-EF|           S|            D|2022-07-24 15:50:31|      2473|     null|        null|   8525830000|TIMBRE,EZVIZ,CS-C...|              TIMBRE|              CS-DB2|               (3MP)|       EN CAJA|            CN|           U|            U|      0|        D|        11|\n|            99|    8525830000|      1|CÁMARAS DE VISION...|  DS 404-2021-EF|           S|            D|2022-07-24 15:50:31|      2473|     null|        null|   8525830000|CAMARA,EZVIZ,CS-T...|              CAMARA|              CS-TY1|            (4MP,W1)|       EN CAJA|            CN|           U|            U|      0|        D|        11|\n|            99|    8525830000|      1|CÁMARAS DE VISION...|  DS 404-2021-EF|           S|            D|2022-07-24 15:50:31|      2473|     null|        null|   8525830000|CAMARA,EZVIZ,CS-C...|              CAMARA|              CS-C8C|        (1080P, 4MM)|       EN CAJA|            CN|           U|            U|      0|        D|        11|\n|            99|    8525830000|      1|CÁMARAS DE VISION...|  DS 404-2021-EF|           S|            D|2022-07-24 15:50:31|      2473|     null|        null|   8525830000|CAMARA,EZVIZ,CS-C...|              CAMARA|             CS-C3TN|         (3MP,2.8MM)|       EN CAJA|            CN|           U|            U|      0|        D|        11|\n+--------------+--------------+-------+--------------------+----------------+------------+-------------+-------------------+----------+---------+------------+-------------+--------------------+--------------------+--------------------+--------------------+--------------+--------------+------------+-------------+-------+---------+----------+\nonly showing top 5 rows\n\n\nTotal de registros: 179334\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1739386782178_54073331",
      "id": "paragraph_1739281541572_680257063",
      "dateCreated": "2025-02-12T18:59:42+0000",
      "status": "READY",
      "$$hashKey": "object:650"
    },
    {
      "text": "%spark.pyspark\ndf_dams_verde_filt = filtrar_por_keywords_optimizado(df_final, df_dams_verde)\n# Mostrar algunos resultados para verificar\nprint(\"\\nPrimeras 5 filas del resultado:\")\ndf_dams_verde_filt.show(5)\n\n# Contar registros para verificar\nprint(\"\\nTotal de registros:\", df_dams_verde_filt.count())",
      "user": "anonymous",
      "dateUpdated": "2025-02-12T18:59:42+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1739386782178_1888512867",
      "id": "paragraph_1739281541767_452128134",
      "dateCreated": "2025-02-12T18:59:42+0000",
      "status": "READY",
      "$$hashKey": "object:651"
    },
    {
      "text": "%spark.pyspark\ndf_dams_fisi_filt = filtrar_por_keywords_optimizado(df_final, df_dams_fisi)\n# Mostrar algunos resultados para verificar\nprint(\"\\nPrimeras 5 filas del resultado:\")\ndf_dams_fisi_filt.show(5)\n\n# Contar registros para verificar\nprint(\"\\nTotal de registros:\", df_dams_fisi_filt.count())",
      "user": "anonymous",
      "dateUpdated": "2025-02-12T18:59:42+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1739386782178_1404151248",
      "id": "paragraph_1739284106964_2091747876",
      "dateCreated": "2025-02-12T18:59:42+0000",
      "status": "READY",
      "$$hashKey": "object:652"
    },
    {
      "text": "%md\n**Guardar csv del canal documentario**",
      "user": "anonymous",
      "dateUpdated": "2025-02-12T18:59:42+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<p><strong>Guardar csv del canal documentario</strong></p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1739386782178_1143856954",
      "id": "paragraph_1739284312281_2140142982",
      "dateCreated": "2025-02-12T18:59:42+0000",
      "status": "READY",
      "$$hashKey": "object:653"
    },
    {
      "title": "Cambiar a guardar en parquet",
      "text": "%spark.pyspark\n# Guardar el DataFrame como CSV\ndf_dams_doc_filt.write \\\n    .mode(\"overwrite\") \\\n    .option(\"header\", \"true\") \\\n    .option(\"encoding\", \"UTF-8\") \\\n    .csv(\"/notebook/data/cleaned/dams_cleaned_doc.csv\")\n",
      "user": "anonymous",
      "dateUpdated": "2025-02-12T18:59:42+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1739386782178_1927316055",
      "id": "paragraph_1739284107459_754254530",
      "dateCreated": "2025-02-12T18:59:42+0000",
      "status": "READY",
      "$$hashKey": "object:654"
    },
    {
      "text": "%md\n# 2. Entrenamiento\n",
      "user": "anonymous",
      "dateUpdated": "2025-02-12T18:59:42+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h1>2. Entrenamiento</h1>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1739386782178_974056416",
      "id": "paragraph_1739284107720_1849968862",
      "dateCreated": "2025-02-12T18:59:42+0000",
      "status": "READY",
      "$$hashKey": "object:655"
    },
    {
      "text": "%spark.pyspark\nfrom pyspark.sql import SparkSession\nfrom pyspark.sql.functions import col, lower, regexp_replace, udf, lit\nfrom pyspark.sql.types import StringType\nimport pyspark.sql.functions as F\nfrom pyspark.sql.window import Window",
      "user": "anonymous",
      "dateUpdated": "2025-02-12T18:59:42+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1739386782178_401916501",
      "id": "paragraph_1739281541945_215796058",
      "dateCreated": "2025-02-12T18:59:42+0000",
      "status": "READY",
      "$$hashKey": "object:656"
    },
    {
      "text": "%spark.pyspark\ndf_dams_doc_filt = spark.read.option(\"header\", \"true\") \\\n    .option(\"inferSchema\", \"true\") \\\n    .csv(\"/notebook/data/cleaned/dams_cleaned_doc.csv\")",
      "user": "anonymous",
      "dateUpdated": "2025-02-12T18:59:42+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1739386782178_1129748828",
      "id": "paragraph_1739284726837_64941505",
      "dateCreated": "2025-02-12T18:59:42+0000",
      "status": "READY",
      "$$hashKey": "object:657"
    },
    {
      "text": "%spark.pyspark\n# window_spec = Window.orderBy(\"NUM_PART_NANDI\")\n# df_with_row_num = df_dams_doc_filt.withColumn(\"row_num\", row_number().over(window_spec))\n\n# df_dams_doc_filt = df_with_row_num.filter((col(\"row_num\") >= 120000) & (col(\"row_num\") <= 150000)).drop(\"row_num\")\n# df_dams_doc_filt.show()",
      "user": "anonymous",
      "dateUpdated": "2025-02-12T18:59:42+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+--------------+--------------+-------+--------------------+----------------+------------+-------------+-------------------+----------+---------+------------+-------------+--------------------+--------------------+--------------------+--------------------+--------------------+--------------+------------+-------------+-------+---------+----------+\n|COD_FUENTE_INF|NUM_PART_NANDI|NUM_SEQ|      DES_NOM_COMERC|DES_ARANCEL_BASE|IND_VIGENCIA|IND_ACTUALIZA|          FEC_REGIS|COD_USUREG|FEC_MODIF|COD_USUMODIF|NUM_PARTNANDI|           DES_COMER|     DES_FORMAPRESEN|        DES_MATECOMP|        DES_USOAPLIC|      DES_OTROSCARAC|COD_PAISORIGEN|COD_UNICOMER|COD_UNIFISICA|IND_DEL|COD_CANAL|COD_ESTDUA|\n+--------------+--------------+-------+--------------------+----------------+------------+-------------+-------------------+----------+---------+------------+-------------+--------------------+--------------------+--------------------+--------------------+--------------------+--------------+------------+-------------+-------+---------+----------+\n|            99|    8483904000|      1|ENGRANAJE PLANETARIO|  DS 404-2021-EF|           S|            D|2022-07-24 01:12:53|      2473|     null|        null|   8483904000|PIÃON DE CUBO SO...|PIÃON DE CUBO SOLAR|PIÃON DE CUBO SOLAR|REPUESTOS PARA VE...|PIÃON DE CUBO SO...|            CN|           U|            U|      0|        D|        13|\n|            99|    8483904000|      1|ENGRANAJE PLANETARIO|  DS 404-2021-EF|           S|            D|2022-07-24 01:12:53|      2473|     null|        null|   8483904000|PIÃON Y CORONA S...|     PIÃON Y CORONA|     PIÃON Y CORONA|REPUESTOS PARA VE...|PIÃON Y CORONA 3...|            CN|           U|            U|      0|        D|        13|\n|            99|    8483904000|      1|ENGRANAJE PLANETARIO|  DS 404-2021-EF|           S|            D|2022-07-24 01:12:53|      2473|     null|        null|   8483904000|SINCRONIZADOR DE ...|SINCRONIZADOR DE ...|SINCRONIZADOR DE ...|REPUESTOS PARA VE...|SINCRONIZADOR DE ...|            CN|           U|            U|      0|        D|        13|\n|            99|    8483904000|      1|ENGRANAJE PLANETARIO|  DS 404-2021-EF|           S|            D|2022-07-24 01:12:53|      2473|     null|        null|   8483904000|SINCRONIZADOR S/M...|       SINCRONIZADOR|       SINCRONIZADOR|REPUESTOS PARA VE...|SINCRONIZADOR DE ...|            CN|           U|            U|      0|        D|        13|\n|            99|    8483904000|      1|ENGRANAJE PLANETARIO|  DS 404-2021-EF|           S|            D|2022-07-24 01:12:53|      2473|     null|        null|   8483904000|SINCRONIZADOR DE ...|SINCRONIZADOR DE ...|SINCRONIZADOR DE ...|REPUESTOS PARA VE...|SINCRONIZADOR DE ...|            CN|           U|            U|      0|        D|        13|\n|            99|    8483904000|      1|ENGRANAJE PLANETARIO|  DS 404-2021-EF|           S|            D|2022-07-24 01:12:53|      2473|     null|        null|   8483904000| GEAR SPEED,S/M,S/M,|          GEAR SPEED|    PIÃONES DE CAJA|      FIERRO FUNDIDO|          GASOLINERO|            CN|         PZA|            U|      0|        D|        13|\n|            99|    8483904000|      1|ENGRANAJE PLANETARIO|  DS 404-2021-EF|           S|            D|2022-07-24 01:12:53|      2473|     null|        null|   8483904000|PINIONES DE CINTA...|            SPROCKET|RUEDA DENTADA ( S...|REPUESTOS PARA MA...|                null|            US|           U|            U|      0|        D|        13|\n|            99|    8483904000|      1|ENGRANAJE PLANETARIO|  DS 404-2021-EF|           S|            D|2022-07-24 01:12:53|      2473|     null|        null|   8483904000|PINIONES DE CINTA...|            SPROCKET|RUEDA DENTADA ( S...|REPUESTOS PARA MA...|                null|            US|           U|            U|      0|        D|        13|\n|            99|    8483904000|      1|ENGRANAJE PLANETARIO|  DS 404-2021-EF|           S|            D|2022-07-24 01:12:53|      2473|     null|        null|   8483904000|KIT PINONES, KIGC...|KIT PINONES ARRAN...|REPUESTO PARA MOT...|REPUESTO PARA MOT...|  28310/12/20/31-156|            CN|         KIT|            U|      0|        D|        38|\n|            99|    8483904000|      1|ENGRANAJE PLANETARIO|  DS 404-2021-EF|           S|            D|2022-07-24 01:12:53|      2473|     null|        null|   8483904000|ENGRANAJE, DEFENG...|           ENGRANAJE|          PE113.5.11|                null|                null|            CN|           U|            U|      0|        D|        38|\n|            99|    8483904000|      1|ENGRANAJE PLANETARIO|  DS 404-2021-EF|           S|            D|2022-07-24 01:12:53|      2473|     null|        null|   8483904000| ENGRANAJE, S/M, S/M|ENGRANAJE MENOR D...|               B-721|PARA TRAPICHE DE ...|                null|            BR|           U|            U|      0|        D|        38|\n|            99|    8483904000|      1|ENGRANAJE PLANETARIO|  DS 404-2021-EF|           S|            D|2022-07-24 01:12:53|      2473|     null|        null|   8483904000| ENGRANAJE, S/M, S/M|ENGRANAJE MAYOR D...|               B-721|PARA TRAPICHE DE ...|                null|            BR|           U|            U|      0|        D|        38|\n|            99|    8483904000|      1|ENGRANAJE PLANETARIO|  DS 404-2021-EF|           S|            D|2022-07-24 01:12:53|      2473|     null|        null|   8483904000|PINON VELOCIMETRO...|PINON VELOCIMETRO...|REPUESTO PARA MOT...|REPUESTO PARA MOT...|       44806-KRS-830|            CN|           U|            U|      0|        D|        38|\n|            99|    8483904000|      1|ENGRANAJE PLANETARIO|  DS 404-2021-EF|           S|            D|2022-07-24 01:12:53|      2473|     null|        null|   8483904000|PINON CORONA, KIG...|PINON CORONA LATE...|REPUESTO PARA MOT...|REPUESTO PARA MOT...|     68412-MFR-ZH10T|            CN|           U|            U|      0|        D|        38|\n|            99|    8483904000|      1|ENGRANAJE PLANETARIO|  DS 404-2021-EF|           S|            D|2022-07-24 01:12:53|      2473|     null|        null|   8483904000|PIÃON CADENA TIP...|PIÃON CADENA TIP...|      METAL/PLASTICO|4 PIEZAS - PARA  ...|       0000-642-1231|            BR|           U|            U|      0|        D|        38|\n|            99|    8483904000|      1|ENGRANAJE PLANETARIO|  DS 404-2021-EF|           S|            D|2022-07-24 01:12:53|      2473|     null|        null|   8483904000|KIT PINONES, KIGC...|KIT PINONES DE TE...|REPUESTO PARA MOT...|REPUESTO PARA MOT...|      23461-KRF-2028|            CN|          2U|            U|      0|        D|        38|\n|            99|    8483904000|      1|ENGRANAJE PLANETARIO|  DS 404-2021-EF|           S|            D|2022-07-24 01:12:53|      2473|     null|        null|   8483904000|PINON TERCERO, KI...|PINON TERCERO 25T...|REPUESTO PARA MOT...|REPUESTO PARA MOT...|       23242-SB-0004|            CN|           U|            U|      0|        D|        38|\n|            99|    8483904000|      1|ENGRANAJE PLANETARIO|  DS 404-2021-EF|           S|            D|2022-07-24 01:12:53|      2473|     null|        null|   8483904000|KIT PINONES, KIGC...|KIT PINONES DE TE...|REPUESTO PARA MOT...|REPUESTO PARA MOT...|      23461-KRF-2028|            CN|          2U|            U|      0|        D|        38|\n|            99|    8483904000|      1|ENGRANAJE PLANETARIO|  DS 404-2021-EF|           S|            D|2022-07-24 01:12:53|      2473|     null|        null|   8483904000|PINON TERCERO, KI...|PINON TERCERA 29D...|REPUESTO PARA MOT...|REPUESTO PARA MOT...|         23731162FML|            CN|           U|            U|      0|        D|        38|\n|            99|    8483904000|      1|ENGRANAJE PLANETARIO|  DS 404-2021-EF|           S|            D|2022-07-24 01:12:53|      2473|     null|        null|   8483904000|RUEDA MOTRIZ DENT...|           UR202C021|              6Y4898|REPUESTOS PARA MA...|                null|            CN|           U|            U|      0|        D|        38|\n+--------------+--------------+-------+--------------------+----------------+------------+-------------+-------------------+----------+---------+------------+-------------+--------------------+--------------------+--------------------+--------------------+--------------------+--------------+------------+-------------+-------+---------+----------+\nonly showing top 20 rows\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1739386782178_114339364",
      "id": "paragraph_1739309831698_1033191197",
      "dateCreated": "2025-02-12T18:59:42+0000",
      "status": "READY",
      "$$hashKey": "object:658"
    },
    {
      "text": "%spark.pyspark\nprint(df_dams_doc_filt.count())\nprint(df_dams_doc_filt.printSchema())",
      "user": "anonymous",
      "dateUpdated": "2025-02-12T18:59:42+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "179334\nroot\n |-- COD_FUENTE_INF: integer (nullable = true)\n |-- NUM_PART_NANDI: long (nullable = true)\n |-- NUM_SEQ: integer (nullable = true)\n |-- DES_NOM_COMERC: string (nullable = true)\n |-- DES_ARANCEL_BASE: string (nullable = true)\n |-- IND_VIGENCIA: string (nullable = true)\n |-- IND_ACTUALIZA: string (nullable = true)\n |-- FEC_REGIS: string (nullable = true)\n |-- COD_USUREG: string (nullable = true)\n |-- FEC_MODIF: string (nullable = true)\n |-- COD_USUMODIF: string (nullable = true)\n |-- NUM_PARTNANDI: long (nullable = true)\n |-- DES_COMER: string (nullable = true)\n |-- DES_FORMAPRESEN: string (nullable = true)\n |-- DES_MATECOMP: string (nullable = true)\n |-- DES_USOAPLIC: string (nullable = true)\n |-- DES_OTROSCARAC: string (nullable = true)\n |-- COD_PAISORIGEN: string (nullable = true)\n |-- COD_UNICOMER: string (nullable = true)\n |-- COD_UNIFISICA: string (nullable = true)\n |-- IND_DEL: integer (nullable = true)\n |-- COD_CANAL: string (nullable = true)\n |-- COD_ESTDUA: integer (nullable = true)\n\nNone\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1739386782179_1984610101",
      "id": "paragraph_1739285021136_2044952955",
      "dateCreated": "2025-02-12T18:59:42+0000",
      "status": "READY",
      "$$hashKey": "object:659"
    },
    {
      "text": "%md\n## 2.1 Muestreo de datos",
      "user": "anonymous",
      "dateUpdated": "2025-02-12T18:59:42+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h2>2.1 Muestreo de datos</h2>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1739386782179_583876580",
      "id": "paragraph_1739281542281_1504611338",
      "dateCreated": "2025-02-12T18:59:42+0000",
      "status": "READY",
      "$$hashKey": "object:660"
    },
    {
      "text": "%spark.pyspark\nfrom pyspark.sql import SparkSession\nfrom pyspark.sql.functions import col, lower, regexp_replace, udf, lit\nfrom pyspark.sql.types import StringType\nimport pyspark.sql.functions as F\nfrom pyspark.sql.window import Window",
      "user": "anonymous",
      "dateUpdated": "2025-02-12T18:59:42+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1739386782179_1559710115",
      "id": "paragraph_1739286247633_1845741643",
      "dateCreated": "2025-02-12T18:59:42+0000",
      "status": "READY",
      "$$hashKey": "object:661"
    },
    {
      "text": "%spark.pyspark\ndf_dams_proc = df_dams_doc_filt.select(\"DES_COMER\", \"NUM_PARTNANDI\")",
      "user": "anonymous",
      "dateUpdated": "2025-02-12T18:59:42+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1739386782179_792476075",
      "id": "paragraph_1739286936606_784251806",
      "dateCreated": "2025-02-12T18:59:42+0000",
      "status": "READY",
      "$$hashKey": "object:662"
    },
    {
      "text": "%spark.pyspark\n\ndf_dams_proc = df_dams_proc.withColumn(\"NUM_PARTNANDI\", F.lpad(col(\"NUM_PARTNANDI\").cast(\"string\"), 10, \"0\"))\ndf_dams_proc = df_dams_proc.withColumn(\"CLASE\", col(\"NUM_PARTNANDI\").substr(1, 2))\ndf_dams_proc.show(5)",
      "user": "anonymous",
      "dateUpdated": "2025-02-12T18:59:42+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+--------------------+-------------+-----+\n|           DES_COMER|NUM_PARTNANDI|CLASE|\n+--------------------+-------------+-----+\n|LCD+TACTIL INTEGR...|   8517790000|   85|\n|MORTERO Y PILON D...|   6909110000|   69|\n|  CATALOGO, S/M, S/M|   4911100000|   49|\n|TRANSFORMADOR,S/M...|   8504319000|   85|\n|    RODAJES,S/M,S/M,|   8482100000|   84|\n+--------------------+-------------+-----+\nonly showing top 5 rows\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1739386782179_112351865",
      "id": "paragraph_1739286248265_1816233862",
      "dateCreated": "2025-02-12T18:59:42+0000",
      "status": "READY",
      "$$hashKey": "object:663"
    },
    {
      "text": "%spark.pyspark\n# Crear un mapeo de clases a números\nclass_mapping = {clase: idx for idx, clase in enumerate(df_dams_proc.select(\"CLASE\").distinct().rdd.flatMap(lambda x: x).collect())}\nmapping_expr = F.create_map([F.lit(x) for pair in class_mapping.items() for x in pair])\n\n# Aplicar el mapeo\ndf_dams_proc = df_dams_proc.withColumn(\"CLASE_NUM\", mapping_expr[col(\"CLASE\")])\ndf_dams_proc.show(5)",
      "user": "anonymous",
      "dateUpdated": "2025-02-12T18:59:42+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+--------------------+-------------+-----+---------+\n|           DES_COMER|NUM_PARTNANDI|CLASE|CLASE_NUM|\n+--------------------+-------------+-----+---------+\n|LCD+TACTIL INTEGR...|   8517790000|   85|       10|\n|MORTERO Y PILON D...|   6909110000|   69|        1|\n|  CATALOGO, S/M, S/M|   4911100000|   49|       37|\n|TRANSFORMADOR,S/M...|   8504319000|   85|       10|\n|    RODAJES,S/M,S/M,|   8482100000|   84|       31|\n+--------------------+-------------+-----+---------+\nonly showing top 5 rows\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1739386782179_35024483",
      "id": "paragraph_1739286248474_1408693025",
      "dateCreated": "2025-02-12T18:59:42+0000",
      "status": "READY",
      "$$hashKey": "object:664"
    },
    {
      "title": "Numero de clases",
      "text": "%spark.pyspark\ndf_distinct = df_dams_proc.select('CLASE_NUM').distinct()\ndf_distinct.count()",
      "user": "anonymous",
      "dateUpdated": "2025-02-12T18:59:42+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "59"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1739386782179_1372371951",
      "id": "paragraph_1739287297428_252390913",
      "dateCreated": "2025-02-12T18:59:42+0000",
      "status": "READY",
      "$$hashKey": "object:665"
    },
    {
      "text": "%spark.pyspark\nprint(\"Distribución de clases en el dataset:\")\ndf_dams_proc.groupBy(\"CLASE_NUM\", \"CLASE\").count().orderBy(\"count\").show(60)",
      "user": "anonymous",
      "dateUpdated": "2025-02-12T18:59:42+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "Distribución de clases en el dataset:\n+---------+-----+-----+\n|CLASE_NUM|CLASE|count|\n+---------+-----+-----+\n|       57|   35|    1|\n|       56|   79|    1|\n|       36|   10|    2|\n|       33|   88|    2|\n|       55|   81|    3|\n|       58|   40|    3|\n|       50|   78|    4|\n|       53|   39|    6|\n|       28|   53|    8|\n|       48|   15|    8|\n|       19|   26|    8|\n|       35|   36|   12|\n|       52|   80|   13|\n|       51|   55|   15|\n|       54|   16|   18|\n|       40|   12|   19|\n|       49|   18|   40|\n|        0|   54|   63|\n|       18|   17|   71|\n|       38|   65|  101|\n|        2|   29|  109|\n|        9|   28|  117|\n|       21|   90|  122|\n|       45|   72|  140|\n|       11|   52|  196|\n|       23|   19|  205|\n|       43|   94|  233|\n|       47|   57|  287|\n|        8|   22|  289|\n|       42|   21|  290|\n|        6|   34|  293|\n|       17|   27|  294|\n|       14|   31|  396|\n|        7|   59|  471|\n|       13|   96|  572|\n|        4|   87|  574|\n|       25|   95|  620|\n|       44|   74|  644|\n|       46|   76|  781|\n|       34|   56|  787|\n|       32|   32| 1669|\n|       26|   38| 1772|\n|       24|   23| 1913|\n|       37|   49| 2263|\n|       22|   68| 2353|\n|        5|   30| 2756|\n|       16|   61| 3346|\n|       30|   67| 3358|\n|       15|   70| 3764|\n|       12|   71| 3800|\n|       20|   60| 3922|\n|       29|   58| 5441|\n|        1|   69| 6390|\n|       41|   83| 6753|\n|       27|   82|10645|\n|        3|   73|14775|\n|       39|   62|19028|\n|       31|   84|28049|\n|       10|   85|49519|\n+---------+-----+-----+\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1739386782179_1848182462",
      "id": "paragraph_1739311109381_1332355516",
      "dateCreated": "2025-02-12T18:59:42+0000",
      "status": "READY",
      "$$hashKey": "object:666"
    },
    {
      "text": "%spark.pyspark\ndf_dams_proc.printSchema()",
      "user": "anonymous",
      "dateUpdated": "2025-02-12T18:59:42+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "root\n |-- DES_COMER: string (nullable = true)\n |-- NUM_PARTNANDI: string (nullable = true)\n |-- CLASE: string (nullable = true)\n |-- CLASE_NUM: integer (nullable = true)\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1739386782179_658094328",
      "id": "paragraph_1739294309802_1833857122",
      "dateCreated": "2025-02-12T18:59:42+0000",
      "status": "READY",
      "$$hashKey": "object:667"
    },
    {
      "title": "(OPTIONAL)Reducir las muestras de datos por capitulos como clase",
      "text": "%spark.pyspark\ncapitulos = [\"62\", \"61\", \"83\", \"84\"]\n\ndf_dams_proc_filtrado = df_dams_proc.filter(col(\"CLASE\").isin(capitulos))",
      "user": "anonymous",
      "dateUpdated": "2025-02-12T18:59:42+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1739386782179_1284796987",
      "id": "paragraph_1739311696867_170872554",
      "dateCreated": "2025-02-12T18:59:42+0000",
      "status": "READY",
      "$$hashKey": "object:668"
    },
    {
      "text": "%spark.pyspark\ndf_dams_proc_filtrado.groupBy(\"CLASE_NUM\", \"CLASE\").count().orderBy(\"count\").show()",
      "user": "anonymous",
      "dateUpdated": "2025-02-12T18:59:42+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+---------+-----+-----+\n|CLASE_NUM|CLASE|count|\n+---------+-----+-----+\n|       16|   61| 3346|\n|       41|   83| 6753|\n|       39|   62|19028|\n|       31|   84|28049|\n+---------+-----+-----+\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1739386782180_1985173966",
      "id": "paragraph_1739311702754_1241396549",
      "dateCreated": "2025-02-12T18:59:42+0000",
      "status": "READY",
      "$$hashKey": "object:669"
    },
    {
      "text": "%spark.pyspark\n",
      "user": "anonymous",
      "dateUpdated": "2025-02-12T18:59:42+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1739386782180_921115468",
      "id": "paragraph_1739312290518_1427440278",
      "dateCreated": "2025-02-12T18:59:42+0000",
      "status": "READY",
      "$$hashKey": "object:670"
    },
    {
      "text": "%spark.pyspark\nfrom pyspark.sql.functions import col, lower, regexp_replace, udf, lit\nfrom pyspark.sql.types import StringType\nimport pyspark.sql.functions as F\nfrom pyspark.sql.window import Window",
      "user": "anonymous",
      "dateUpdated": "2025-02-12T18:59:42+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1739386782180_1571736421",
      "id": "paragraph_1739294517447_405618855",
      "dateCreated": "2025-02-12T18:59:42+0000",
      "status": "READY",
      "$$hashKey": "object:671"
    },
    {
      "text": "%spark.pyspark\nfrom pyspark.sql import Window\nfrom pyspark.sql.functions import col, lower, regexp_replace, trim, row_number, lit\n\ndef preparar_dataset_clasificacion(df, clases_seleccionadas, muestras_por_clase=100):\n    \"\"\"\n    Prepara un dataset de clasificación en PySpark.\n    \n    Parámetros:\n    -----------\n    df : DataFrame de PySpark\n        DataFrame original con columnas [DES_COMER] y CLASE_NUM.\n    clases_seleccionadas : list\n        Lista de clases a incluir en el dataset.\n    muestras_por_clase : int, opcional\n        Número de muestras a obtener por cada clase (default: 100).\n    \n    Retorna:\n    --------\n    DataFrame de PySpark\n        Dataset preparado para entrenamiento de red neuronal.\n    \"\"\"\n    # Filtrar solo las clases seleccionadas\n    df_filtrado = df.filter(col(\"CLASE_NUM\").isin(clases_seleccionadas))\n    \n    # Limpiar descripciones\n    df_filtrado = df_filtrado.withColumn(\"DESCR_LIMPIA\", trim(lower(regexp_replace(col(\"DES_COMER\"), \"\\\\s+\", \" \"))))\n    \n    # Eliminar descripciones duplicadas dentro de cada clase\n    # Agregar una columna de orden (puedes usar una columna existente o una constante)\n    window_spec = Window.partitionBy(\"CLASE_NUM\", \"DESCR_LIMPIA\").orderBy(lit(1))\n    df_unico = df_filtrado.withColumn(\"row_num\", row_number().over(window_spec)) \\\n        .filter(col(\"row_num\") == 1) \\\n        .drop(\"row_num\")\n    \n    # Preparar el dataset final con muestras equitativas\n    dataset_final = []\n    \n    for clase in clases_seleccionadas:\n        # Obtener muestras de la clase actual\n        muestras_clase = df_unico.filter(col(\"CLASE_NUM\") == clase)\n        \n        # Si hay menos muestras que las solicitadas, usar todas\n        if muestras_clase.count() <= muestras_por_clase:\n            dataset_final.append(muestras_clase)\n        else:\n            # Muestreo aleatorio estratificado\n            muestras_seleccionadas = muestras_clase.sample(fraction=1.0, seed=42).limit(muestras_por_clase)\n            dataset_final.append(muestras_seleccionadas)\n    \n    # Concatenar todas las muestras\n    dataset_preparado = dataset_final[0]\n    for df_clase in dataset_final[1:]:\n        dataset_preparado = dataset_preparado.union(df_clase)\n    \n    # Verificar la distribución de clases\n    print(\"Distribución de clases en el dataset:\")\n    dataset_preparado.groupBy(\"CLASE_NUM\").count().show()\n    \n    return dataset_preparado",
      "user": "anonymous",
      "dateUpdated": "2025-02-12T18:59:42+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1739386782180_188933073",
      "id": "paragraph_1739286248723_1764468997",
      "dateCreated": "2025-02-12T18:59:42+0000",
      "status": "READY",
      "$$hashKey": "object:672"
    },
    {
      "text": "%spark.pyspark\n#clases_muestreo = [0, 1, 2, 3]\n# clases_muestreo = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, \n#                     28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,\n#                     54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,\n#                     80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96]\n\nclases = [16, 39, 41, 31]\n\ndataset_preparado = preparar_dataset_clasificacion(df_dams_proc_filtrado, clases_muestreo, muestras_por_clase=500)\n",
      "user": "anonymous",
      "dateUpdated": "2025-02-12T18:59:42+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "Distribución de clases en el dataset:\n+---------+-----+\n|CLASE_NUM|count|\n+---------+-----+\n|       16|  500|\n|       31|  500|\n|       39|  500|\n|       41|  500|\n+---------+-----+\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1739386782180_1371709523",
      "id": "paragraph_1739294142966_1311483835",
      "dateCreated": "2025-02-12T18:59:42+0000",
      "status": "READY",
      "$$hashKey": "object:673"
    },
    {
      "title": "Guardar muestras para entrenamiento",
      "text": "%spark.pyspark\ndataset_preparado.write \\\n    .mode(\"overwrite\") \\\n    .option(\"header\", \"true\") \\\n    .option(\"encoding\", \"UTF-8\") \\\n    .csv(\"/notebook/data/cleaned/dams_train_test.csv\")",
      "user": "anonymous",
      "dateUpdated": "2025-02-12T18:59:42+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1739386782180_744769883",
      "id": "paragraph_1739294144158_922489683",
      "dateCreated": "2025-02-12T18:59:42+0000",
      "status": "READY",
      "$$hashKey": "object:674"
    },
    {
      "text": "%md\n# 3. Entrenamiento\n",
      "user": "anonymous",
      "dateUpdated": "2025-02-12T18:59:42+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h1>3. Entrenamiento</h1>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1739386782180_1550694258",
      "id": "paragraph_1739294144207_453778867",
      "dateCreated": "2025-02-12T18:59:42+0000",
      "status": "READY",
      "$$hashKey": "object:675"
    },
    {
      "title": "Carga de datos Listo para Entrenamiento(Opcional)",
      "text": "%spark.pyspark\ndf_dams_doc_filt = spark.read.option(\"header\", \"true\") \\\n    .option(\"inferSchema\", \"true\") \\\n    .csv(\"/notebook/data/dams_muestras_doc.csv\")",
      "user": "anonymous",
      "dateUpdated": "2025-02-14T13:46:31+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://16632124131c:4040/jobs/job?id=0",
              "$$hashKey": "object:5187"
            },
            {
              "jobUrl": "http://16632124131c:4040/jobs/job?id=1",
              "$$hashKey": "object:5188"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1739386782180_269766245",
      "id": "paragraph_1739294143830_1913212955",
      "dateCreated": "2025-02-12T18:59:42+0000",
      "dateStarted": "2025-02-14T13:46:31+0000",
      "dateFinished": "2025-02-14T13:48:21+0000",
      "status": "FINISHED",
      "$$hashKey": "object:676"
    },
    {
      "text": "%spark.pyspark\n# Verificar la distribución de clases\nprint(\"Distribución de clases en el dataset:\")\ndf_dams_doc_filt.groupBy(\"CLASE_NUM\", \"CLASE\").count().show()",
      "user": "anonymous",
      "dateUpdated": "2025-02-14T13:57:59+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "Distribución de clases en el dataset:\n+---------+-----+-----+\n|CLASE_NUM|CLASE|count|\n+---------+-----+-----+\n|        2|   62|  500|\n|        1|   84|  500|\n|        0|   61|  500|\n|        3|   85|  500|\n+---------+-----+-----+\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://16632124131c:4040/jobs/job?id=2",
              "$$hashKey": "object:5238"
            },
            {
              "jobUrl": "http://16632124131c:4040/jobs/job?id=3",
              "$$hashKey": "object:5239"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1739386782180_1058673188",
      "id": "paragraph_1738249516622_5168743",
      "dateCreated": "2025-02-12T18:59:42+0000",
      "dateStarted": "2025-02-14T13:57:59+0000",
      "dateFinished": "2025-02-14T13:58:02+0000",
      "status": "FINISHED",
      "$$hashKey": "object:677"
    },
    {
      "text": "%spark.pyspark\ndf_dams_doc_filt.show(5)",
      "user": "anonymous",
      "dateUpdated": "2025-02-14T13:58:07+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+--------------------+-------------+-----+---------+\n|           DES_COMER|NUM_PARTNANDI|CLASE|CLASE_NUM|\n+--------------------+-------------+-----+---------+\n|POLO (T-SHIRT/REM...|   6109100031|   61|        0|\n|POLO (T-SHIRT/REM...|   6109100031|   61|        0|\n|POLO (T-SHIRT/REM...|   6109100031|   61|        0|\n|POLO (T-SHIRT/REM...|   6109100031|   61|        0|\n|POLO (T-SHIRT/REM...|   6109100031|   61|        0|\n+--------------------+-------------+-----+---------+\nonly showing top 5 rows\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://16632124131c:4040/jobs/job?id=4",
              "$$hashKey": "object:5289"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1739386782180_1757367213",
      "id": "paragraph_1739287279696_276898997",
      "dateCreated": "2025-02-12T18:59:42+0000",
      "dateStarted": "2025-02-14T13:58:07+0000",
      "dateFinished": "2025-02-14T13:58:08+0000",
      "status": "FINISHED",
      "$$hashKey": "object:678"
    },
    {
      "text": "%spark.pyspark\nclass_mapping = {61: 0, 84: 1, 62: 2, 85: 3}\nclass_mapping",
      "user": "anonymous",
      "dateUpdated": "2025-02-14T13:58:10+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "{61: 0, 84: 1, 62: 2, 85: 3}"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1739386782181_1740356593",
      "id": "paragraph_1739336364209_111061707",
      "dateCreated": "2025-02-12T18:59:42+0000",
      "dateStarted": "2025-02-14T13:58:10+0000",
      "dateFinished": "2025-02-14T13:58:10+0000",
      "status": "FINISHED",
      "$$hashKey": "object:679"
    },
    {
      "text": "%md\n# 4. Entrenamiento con PyTorch",
      "user": "anonymous",
      "dateUpdated": "2025-02-14T14:06:46+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h1>4. Entrenamiento con PyTorch</h1>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1739541972159_256527709",
      "id": "paragraph_1739541972159_256527709",
      "dateCreated": "2025-02-14T14:06:12+0000",
      "dateStarted": "2025-02-14T14:06:46+0000",
      "dateFinished": "2025-02-14T14:06:48+0000",
      "status": "FINISHED",
      "$$hashKey": "object:680"
    },
    {
      "text": "%spark.pyspark\nimport pandas as pd\nimport numpy as np\nimport torch\nfrom torch import nn\nfrom torch.utils.data import Dataset, DataLoader\nfrom transformers import BertTokenizer, BertModel\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import classification_report, confusion_matrix\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nfrom tqdm import tqdm",
      "user": "anonymous",
      "dateUpdated": "2025-02-14T14:07:36+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "/opt/conda/envs/python_3_with_R/lib/python3.9/site-packages/tqdm/auto.py:21: TqdmWarning: IProgress not found. Please update jupyter and ipywidgets. See https://ipywidgets.readthedocs.io/en/stable/user_install.html\n  from .autonotebook import tqdm as notebook_tqdm\n2025-02-14 14:07:51.706962: I external/local_xla/xla/tsl/cuda/cudart_stub.cc:32] Could not find cuda drivers on your machine, GPU will not be used.\n2025-02-14 14:07:51.937883: I external/local_xla/xla/tsl/cuda/cudart_stub.cc:32] Could not find cuda drivers on your machine, GPU will not be used.\n2025-02-14 14:07:52.158981: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:477] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\nWARNING: All log messages before absl::InitializeLog() is called are written to STDERR\nE0000 00:00:1739542072.339390     570 cuda_dnn.cc:8310] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\nE0000 00:00:1739542072.389929     570 cuda_blas.cc:1418] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n2025-02-14 14:07:52.853327: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.\nTo enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1739542040554_639083665",
      "id": "paragraph_1739542040554_639083665",
      "dateCreated": "2025-02-14T14:07:20+0000",
      "dateStarted": "2025-02-14T14:07:36+0000",
      "dateFinished": "2025-02-14T14:07:59+0000",
      "status": "FINISHED",
      "$$hashKey": "object:681"
    },
    {
      "text": "%spark.pyspark\nclass ArancelDataset(Dataset):\n    def __init__(self, texts, labels, tokenizer, max_len=128):\n        self.texts = texts\n        self.labels = labels\n        self.tokenizer = tokenizer\n        self.max_len = max_len\n    \n    def __len__(self):\n        return len(self.texts)\n    \n    def __getitem__(self, idx):\n        text = str(self.texts[idx])\n        encoding = self.tokenizer(\n            text,\n            add_special_tokens=True,\n            max_length=self.max_len,\n            padding='max_length',\n            truncation=True,\n            return_tensors='pt'\n        )\n        \n        return {\n            'input_ids': encoding['input_ids'].flatten(),\n            'attention_mask': encoding['attention_mask'].flatten(),\n            'label': torch.tensor(self.labels[idx], dtype=torch.long)\n        }",
      "user": "anonymous",
      "dateUpdated": "2025-02-14T14:08:12+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1739386782181_2092296386",
      "id": "paragraph_1739287279894_733044783",
      "dateCreated": "2025-02-12T18:59:42+0000",
      "dateStarted": "2025-02-14T14:08:12+0000",
      "dateFinished": "2025-02-14T14:08:12+0000",
      "status": "FINISHED",
      "$$hashKey": "object:682"
    },
    {
      "text": "%spark.pyspark\nclass TariffClassifier(nn.Module):\n    def __init__(self, n_classes):\n        super(TariffClassifier, self).__init__()\n        self.bert = BertModel.from_pretrained('bert-base-multilingual-cased')\n        self.drop1 = nn.Dropout(p=0.3)\n        self.drop2 = nn.Dropout(p=0.2)\n        self.drop3 = nn.Dropout(p=0.1)\n        self.fc1 = nn.Linear(self.bert.config.hidden_size, 512)\n        self.fc2 = nn.Linear(512, 256)\n        self.fc3 = nn.Linear(256, n_classes)\n        self.relu1 = nn.ReLU()\n        self.relu2 = nn.ReLU()\n\n    def forward(self, input_ids, attention_mask):\n        outputs = self.bert(\n            input_ids=input_ids,\n            attention_mask=attention_mask\n        )\n        x = self.drop1(outputs[1])\n        x = self.fc1(x)\n        x = self.relu1(x)\n        x = self.drop2(x)\n\n        x = self.fc2(x)\n        x = self.relu2(x)\n        x = self.drop3(x)\n\n        x = self.fc3(x)\n        return x",
      "user": "anonymous",
      "dateUpdated": "2025-02-14T14:08:14+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1739386782181_1955651357",
      "id": "paragraph_1739287280253_1236523587",
      "dateCreated": "2025-02-12T18:59:42+0000",
      "dateStarted": "2025-02-14T14:08:14+0000",
      "dateFinished": "2025-02-14T14:08:14+0000",
      "status": "FINISHED",
      "$$hashKey": "object:683"
    },
    {
      "title": "SparkDF to DF",
      "text": "%spark.pyspark\ndataset_preparado = df_dams_doc_filt.toPandas()",
      "user": "anonymous",
      "dateUpdated": "2025-02-14T14:08:20+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://16632124131c:4040/jobs/job?id=5",
              "$$hashKey": "object:5535"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1739541690752_52805184",
      "id": "paragraph_1739541690752_52805184",
      "dateCreated": "2025-02-14T14:01:30+0000",
      "dateStarted": "2025-02-14T14:08:20+0000",
      "dateFinished": "2025-02-14T14:08:21+0000",
      "status": "FINISHED",
      "$$hashKey": "object:684"
    },
    {
      "text": "%spark.pyspark\ndataset_preparado",
      "user": "anonymous",
      "dateUpdated": "2025-02-14T14:08:31+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>DES_COMER</th>\n      <th>NUM_PARTNANDI</th>\n      <th>CLASE</th>\n      <th>CLASE_NUM</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>POLO (T-SHIRT/REMERA),H&amp;M,256517,</td>\n      <td>6109100031</td>\n      <td>61</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>POLO (T-SHIRT/REMERA),H&amp;M,260879,</td>\n      <td>6109100031</td>\n      <td>61</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>POLO (T-SHIRT/REMERA),H&amp;M,208137,</td>\n      <td>6109100031</td>\n      <td>61</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>POLO (T-SHIRT/REMERA),H&amp;M,325911-1643,</td>\n      <td>6109100031</td>\n      <td>61</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>POLO (T-SHIRT/REMERA),H&amp;M,308361,</td>\n      <td>6109100031</td>\n      <td>61</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>1995</th>\n      <td>CONVERTIDORES ELECTRICOS,</td>\n      <td>8502400000</td>\n      <td>85</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>1996</th>\n      <td>FAROS POSTERIORES, S/M, S/M</td>\n      <td>8512201000</td>\n      <td>85</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>1997</th>\n      <td>PARLANTE INALAMBRICO,KTS PARLANTES,GTS-16178 ´,</td>\n      <td>8518290000</td>\n      <td>85</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>1998</th>\n      <td>ASPIRADORA, SPARCO, SPV1305_12V</td>\n      <td>8508110000</td>\n      <td>85</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>1999</th>\n      <td>BUJIAS, TORCH, 3707100U</td>\n      <td>8511109000</td>\n      <td>85</td>\n      <td>3</td>\n    </tr>\n  </tbody>\n</table>\n<p>2000 rows × 4 columns</p>\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1739542106191_247683502",
      "id": "paragraph_1739542106191_247683502",
      "dateCreated": "2025-02-14T14:08:26+0000",
      "dateStarted": "2025-02-14T14:08:31+0000",
      "dateFinished": "2025-02-14T14:08:31+0000",
      "status": "FINISHED",
      "$$hashKey": "object:685"
    },
    {
      "text": "%spark.pyspark\n# Split de datos\nX_train, X_test, y_train, y_test = train_test_split(\n    dataset_preparado['DES_COMER'].values, \n    dataset_preparado['CLASE_NUM'].values,\n    test_size=0.2,\n    random_state=42\n)",
      "user": "anonymous",
      "dateUpdated": "2025-02-14T14:08:50+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1739541666452_1222638511",
      "id": "paragraph_1739541666452_1222638511",
      "dateCreated": "2025-02-14T14:01:06+0000",
      "dateStarted": "2025-02-14T14:08:50+0000",
      "dateFinished": "2025-02-14T14:08:51+0000",
      "status": "FINISHED",
      "$$hashKey": "object:686"
    },
    {
      "text": "%spark.pyspark\nnp.array(X_train[:10]), y_train[:10]",
      "user": "anonymous",
      "dateUpdated": "2025-02-14T14:08:53+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "(array(['INYECTOR DE GASOLINA S/M 23250-28080',\n        'POLO (T-SHIRT/REMERA),H&M,272457,', 'MOTOR,CHANGCHAI,ZCS1105N,',\n        'VALVULA EQUIPADA DEM-14-06-0, SIDEL, SIDEL',\n        'POLO (T-SHIRT/REMERA),H&M,227461,',\n        'SOSTÉN, VICTORIAS SECRET, 26474988, TIPO DE TELA: TEJIDO DE TRAMA Y URDIMBRE',\n        'ASPIRADORA, SPARCO, SPV1305_12V',\n        'POLO (T-SHIRT/REMERA),H&M,248522,',\n        'SOSTÉN, VICTORIAS SECRET, 26485507, TIPO DE TELA: TEJIDO DE TRAMA Y URDIMBRE',\n        'SOSTÉN, CAFFARENA, 6033, TIPO DE TELA: ENCAJE'], dtype=object),\n array([1, 0, 1, 1, 0, 2, 3, 0, 2, 2], dtype=int32))"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1739541666639_682494401",
      "id": "paragraph_1739541666639_682494401",
      "dateCreated": "2025-02-14T14:01:06+0000",
      "dateStarted": "2025-02-14T14:08:53+0000",
      "dateFinished": "2025-02-14T14:08:53+0000",
      "status": "FINISHED",
      "$$hashKey": "object:687"
    },
    {
      "text": "%spark.pyspark\nnp.array(X_test[:10]), y_test[:10]",
      "user": "anonymous",
      "dateUpdated": "2025-02-14T14:09:12+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "(array(['LINTERNA DE MANO GATT FT2D1E7',\n        'POLO (T-SHIRT/REMERA),H&M,269705,', 'SOSTÉN,H&M,202727,',\n        'VALVULA MARIPOSA NEUMATICA DN100, DANFOS, DN100L',\n        'SOSTÉN, VICTORIAS SECRET, 667556540963, TIPO DE TELA: TEJIDO DE TRAMA Y URDIMBRE',\n        'SOSTÉN, VICTORIAS SECRET, 26464225, TIPO DE TELA: TEJIDO DE TRAMA Y URDIMBRE',\n        'VALVULA, IAT, MV522PPL', 'DVD PELÍCULAS, S/M, S/M',\n        'POLO (T-SHIRT/REMERA),H&M,321989,',\n        'SOSTÉN, VICTORIAS SECRET, 26453982, TIPO DE TELA: TEJIDO DE TRAMA Y URDIMBRE'],\n       dtype=object),\n array([3, 0, 2, 1, 2, 2, 1, 3, 0, 2], dtype=int32))"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1739541666886_287743648",
      "id": "paragraph_1739541666886_287743648",
      "dateCreated": "2025-02-14T14:01:06+0000",
      "dateStarted": "2025-02-14T14:09:13+0000",
      "dateFinished": "2025-02-14T14:09:13+0000",
      "status": "FINISHED",
      "$$hashKey": "object:688"
    },
    {
      "text": "%spark.pyspark\n# Inicializar tokenizer y datasets\ntokenizer = BertTokenizer.from_pretrained('bert-base-multilingual-cased')\ntrain_dataset = ArancelDataset(X_train, y_train, tokenizer)\ntest_dataset = ArancelDataset(X_test, y_test, tokenizer)\n\n# Dataloaders\ntrain_loader = DataLoader(train_dataset, batch_size=16, shuffle=True)\ntest_loader = DataLoader(test_dataset, batch_size=16)\n\n# Configuración del modelo\ndevice = torch.device('cuda' if torch.cuda.is_available() else 'cpu')\nmodel = TariffClassifier(len(class_mapping))\nmodel = model.to(device)\n\n# Entrenamiento\noptimizer = torch.optim.AdamW(model.parameters(), lr=2e-5)\ncriterion = nn.CrossEntropyLoss()\nepochs = 1",
      "user": "anonymous",
      "dateUpdated": "2025-02-14T14:37:44+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1739541667202_1455480540",
      "id": "paragraph_1739541667202_1455480540",
      "dateCreated": "2025-02-14T14:01:07+0000",
      "dateStarted": "2025-02-14T14:37:44+0000",
      "dateFinished": "2025-02-14T14:37:45+0000",
      "status": "FINISHED",
      "$$hashKey": "object:689"
    },
    {
      "text": "%spark.pyspark\n# Función de entrenamiento\ndef train_epoch(model, loader, optimizer, criterion, device):\n    model.train()\n    total_loss = 0\n    \n    for batch in tqdm(loader):\n        optimizer.zero_grad()\n        \n        input_ids = batch['input_ids'].to(device)\n        attention_mask = batch['attention_mask'].to(device)\n        labels = batch['label'].to(device)\n        \n        outputs = model(input_ids, attention_mask)\n        loss = criterion(outputs, labels)\n        \n        loss.backward()\n        optimizer.step()\n        \n        total_loss += loss.item()\n    \n    return total_loss / len(loader)",
      "user": "anonymous",
      "dateUpdated": "2025-02-14T14:37:47+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1739541667171_399865355",
      "id": "paragraph_1739541667171_399865355",
      "dateCreated": "2025-02-14T14:01:07+0000",
      "dateStarted": "2025-02-14T14:37:47+0000",
      "dateFinished": "2025-02-14T14:37:47+0000",
      "status": "FINISHED",
      "$$hashKey": "object:690"
    },
    {
      "text": "%spark.pyspark\n# Función de evaluación\ndef evaluate(model, loader, criterion, device):\n    model.eval()\n    total_loss = 0\n    predictions = []\n    true_labels = []\n    \n    with torch.no_grad():\n        for batch in loader:\n            input_ids = batch['input_ids'].to(device)\n            attention_mask = batch['attention_mask'].to(device)\n            labels = batch['label'].to(device)\n            \n            outputs = model(input_ids, attention_mask)\n            loss = criterion(outputs, labels)\n            \n            total_loss += loss.item()\n            \n            _, preds = torch.max(outputs, dim=1)\n            predictions.extend(preds.cpu().tolist())\n            true_labels.extend(labels.cpu().tolist())\n    \n    return total_loss / len(loader), predictions, true_labels",
      "user": "anonymous",
      "dateUpdated": "2025-02-14T14:37:50+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1739542178846_617938659",
      "id": "paragraph_1739542178846_617938659",
      "dateCreated": "2025-02-14T14:09:38+0000",
      "dateStarted": "2025-02-14T14:37:50+0000",
      "dateFinished": "2025-02-14T14:37:50+0000",
      "status": "FINISHED",
      "$$hashKey": "object:691"
    },
    {
      "text": "%spark.pyspark\ntrain_losses = []\nval_losses = []\n# Entrenamiento del modelo\nprint(\"Iniciando entrenamiento...\")\nfor epoch in range(epochs):\n    train_loss = train_epoch(model, train_loader, optimizer, criterion, device)\n    val_loss, predictions, true_labels = evaluate(model, test_loader, criterion, device)\n    train_losses.append(train_loss)\n    val_losses.append(val_loss)\n    print(f'Epoch {epoch + 1}/{epochs}')\n    print(f'Training Loss: {train_loss:.4f}')\n    print(f'Validation Loss: {val_loss:.4f}')",
      "user": "anonymous",
      "dateUpdated": "2025-02-14T14:38:07+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1739542182903_171215121",
      "id": "paragraph_1739542182903_171215121",
      "dateCreated": "2025-02-14T14:09:42+0000",
      "dateStarted": "2025-02-14T14:38:07+0000",
      "dateFinished": "2025-02-14T14:38:48+0000",
      "status": "ABORT",
      "$$hashKey": "object:692"
    },
    {
      "title": "Gráfico de la Convergencia",
      "text": "%spark.pyspark\nimport matplotlib.pyplot as plt\n\nplt.plot(train_losses, label=\"Train Loss\")\nplt.plot(test_losses, label=\"Test Loss\")\nplt.xlabel(\"Épocas\")\nplt.ylabel(\"Pérdida\")\nplt.title(\"Convergencia del Modelo\")\nplt.legend()\nplt.grid()\nplt.show()",
      "user": "anonymous",
      "dateUpdated": "2025-02-14T14:16:51+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1739542183292_946553515",
      "id": "paragraph_1739542183292_946553515",
      "dateCreated": "2025-02-14T14:09:43+0000",
      "status": "READY",
      "$$hashKey": "object:693"
    },
    {
      "text": "%spark.pyspark\n# 4. Evaluación\nprint(\"\\nEvaluación del modelo:\")\nreverse_class_mapping = {v: k for k, v in class_mapping.items()}\npredictions_mapped = [reverse_class_mapping[p] for p in predictions]\ntrue_labels_mapped = [reverse_class_mapping[t] for t in true_labels]\n\n# Crear matriz de confusión\nplt.figure(figsize=(12, 8))\ncm = confusion_matrix(true_labels_mapped, predictions_mapped)\nsns.heatmap(cm, annot=True, fmt='d', cmap='Blues')\nplt.title('Matriz de Confusión')\nplt.xlabel('Predicción')\nplt.ylabel('Valor Real')\nplt.show()",
      "user": "anonymous",
      "dateUpdated": "2025-02-14T14:20:11+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1739542808518_143630132",
      "id": "paragraph_1739542808518_143630132",
      "dateCreated": "2025-02-14T14:20:08+0000",
      "status": "READY",
      "$$hashKey": "object:694"
    },
    {
      "text": "%spark.pyspark\n# Imprimir reporte de clasificación\nprint(\"\\nReporte de Clasificación:\")\nprint(classification_report(true_labels_mapped, predictions_mapped))",
      "user": "anonymous",
      "dateUpdated": "2025-02-14T14:20:30+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1739542827998_480457693",
      "id": "paragraph_1739542827998_480457693",
      "dateCreated": "2025-02-14T14:20:27+0000",
      "status": "READY",
      "$$hashKey": "object:695"
    },
    {
      "title": "Guardar Modelo",
      "text": "%spark.pyspark\ntorch.save(model.state_dict(), \"/notebook/data/models/class-model-nn-doc-v1.pth\")",
      "user": "anonymous",
      "dateUpdated": "2025-02-14T14:22:33+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1739542183174_1563366674",
      "id": "paragraph_1739542183174_1563366674",
      "dateCreated": "2025-02-14T14:09:43+0000",
      "status": "READY",
      "$$hashKey": "object:696"
    },
    {
      "title": "Cargar Modelo",
      "text": "%spark.pyspark\nmodel = torch.load(\"/notebook/data/models/class-model-nn-doc-v1.pth\")",
      "user": "anonymous",
      "dateUpdated": "2025-02-14T14:22:35+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1739542840813_1570396367",
      "id": "paragraph_1739542840813_1570396367",
      "dateCreated": "2025-02-14T14:20:40+0000",
      "status": "READY",
      "$$hashKey": "object:697"
    },
    {
      "text": "%spark.pyspark\n# 5. Predicciones de ejemplo\ndef predict_text(text, model, tokenizer, device):\n    model.eval()\n    encoding = tokenizer(\n        text,\n        add_special_tokens=True,\n        max_length=128,\n        padding='max_length',\n        truncation=True,\n        return_tensors='pt'\n    )\n    \n    input_ids = encoding['input_ids'].to(device)\n    attention_mask = encoding['attention_mask'].to(device)\n    \n    with torch.no_grad():\n        outputs = model(input_ids, attention_mask)\n        _, preds = torch.max(outputs, dim=1)\n    \n    return reverse_class_mapping[preds.item()]\n\n# Ejemplo de predicciones\nejemplos = [\n    \"MÁQUINAS AUTOMÁTICAS PARA TRATAMIENTO O PROCESAMIENTO DE DATOS, DIGITALES\",\n    \"TEJIDOS DE ALGODÓN CON UN CONTENIDO DE ALGODÓN SUPERIOR O IGUAL AL 85% EN PESO\",\n    \"MEDICAMENTOS PARA USO TERAPÉUTICO O PROFILÁCTICO\"\n]\n\nprint(\"\\nEjemplos de predicciones:\")\nfor texto in ejemplos:\n    prediccion = predict_text(texto, model, tokenizer, device)\n    print(f\"\\nTexto: {texto}\")\n    print(f\"Capítulo predicho: {prediccion}\")",
      "user": "anonymous",
      "dateUpdated": "2025-02-14T14:19:43+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1739542772395_1076702566",
      "id": "paragraph_1739542772395_1076702566",
      "dateCreated": "2025-02-14T14:19:32+0000",
      "status": "READY",
      "$$hashKey": "object:698"
    },
    {
      "text": "%python\nimport json\nimport sys\nimport os\n\ndef convert_zpln_to_json(input_file, output_file=None):\n    \"\"\"\n    Convierte un archivo .zpln de Zeppelin 0.11.2 a un formato compatible con Zeppelin 0.8\n    \n    Args:\n        input_file (str): Ruta al archivo .zpln\n        output_file (str, optional): Ruta para el archivo .json de salida\n    \"\"\"\n    try:\n        # Leer el archivo .zpln\n        with open(input_file, 'r', encoding='utf-8') as f:\n            notebook = json.load(f)\n        \n        # Si no se especifica archivo de salida, crear uno basado en el nombre de entrada\n        if output_file is None:\n            output_file = os.path.splitext(input_file)[0] + '.json'\n        \n        # Guardar como JSON\n        with open(output_file, 'w', encoding='utf-8') as f:\n            json.dump(notebook, f, indent=2)\n            \n        print(f\"Conversión exitosa. Archivo guardado como: {output_file}\")\n        \n    except json.JSONDecodeError:\n        print(\"Error: El archivo no es un JSON válido\")\n    except Exception as e:\n        print(f\"Error durante la conversión: {str(e)}\")",
      "user": "anonymous",
      "dateUpdated": "2025-02-14T15:54:08+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1739548197722_417315846",
      "id": "paragraph_1739548197722_417315846",
      "dateCreated": "2025-02-14T15:49:57+0000",
      "dateStarted": "2025-02-14T15:54:08+0000",
      "dateFinished": "2025-02-14T15:54:08+0000",
      "status": "FINISHED",
      "$$hashKey": "object:699"
    },
    {
      "text": "%python\nconvert_zpln_to_json(\"/notebook/INCA/NLP/training-torch_2KKB8B1SJ.zpln\", \"/notebook/INCA/NLP/training-torch-nn-v2.json\")",
      "user": "anonymous",
      "dateUpdated": "2025-02-14T15:54:28+0000",
      "progress": 0,
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/python"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "Conversión exitosa. Archivo guardado como: /notebook/INCA/NLP/training-torch-nn-v2.json\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1739386782183_2107420828",
      "id": "paragraph_1738249494472_97309389",
      "dateCreated": "2025-02-12T18:59:42+0000",
      "dateStarted": "2025-02-14T15:54:28+0000",
      "dateFinished": "2025-02-14T15:54:28+0000",
      "status": "FINISHED",
      "$$hashKey": "object:700"
    },
    {
      "text": "%python\n",
      "user": "anonymous",
      "dateUpdated": "2025-02-14T15:54:22+0000",
      "progress": 0,
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1739548462200_949730886",
      "id": "paragraph_1739548462200_949730886",
      "dateCreated": "2025-02-14T15:54:22+0000",
      "status": "READY",
      "$$hashKey": "object:701"
    },
    {
      "text": "%python\n",
      "user": "anonymous",
      "dateUpdated": "2025-02-14T15:54:22+0000",
      "progress": 0,
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1739548462918_1341550865",
      "id": "paragraph_1739548462918_1341550865",
      "dateCreated": "2025-02-14T15:54:22+0000",
      "status": "READY",
      "$$hashKey": "object:702"
    },
    {
      "user": "anonymous",
      "progress": 0,
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1739548432159_1941521506",
      "id": "paragraph_1739548432159_1941521506",
      "dateCreated": "2025-02-14T15:53:52+0000",
      "status": "READY",
      "$$hashKey": "object:703"
    }
  ],
  "name": "training-torch",
  "id": "2KKB8B1SJ",
  "defaultInterpreterGroup": "spark",
  "version": "0.11.2",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {},
  "config": {
    "isZeppelinNotebookCronEnable": false,
    "looknfeel": "default",
    "personalizedMode": "false"
  },
  "info": {},
  "path": "/INCA/NLP/training-torch"
}